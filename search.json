[{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started","text":"goal eatPrep, short Educational Assesment Tools: Preparation, automate preparation item response test data; especially exclusively typical use cases Institute Educational Quality Improvement (IQB). Therefore works together IQB-specific applications ItemDB ZKDaemon. main purpose eatPrep read, score, aggregate merge data regular SPSS (.sav) data file (via function readSpss()) metadata databases (readDaemonXlsx()) Excel spreadsheets (readMerkmalXlsx()). Additional functions include checking data (checkData()), meta data (checkInputList()), design (checkDesign()), recoding (missing) values (recodeData(), mnrCoding(), aggregateData(), scoreData(),collapseMissings()), working rater data (meanAgree(), meanKappa()), evaluating item categories (catPbc(), evalPbc()) exporting prepared raw item data sets different formats (writeSpss(), prep2GADS()). can done single function call automateDataPreparation(). prototypical scenario, constructing test IQB, e.g. educational purposes. pilot study, created several overlapping booklets variety items different item formats (constructed response, multiple choice). Thereby, data consists several layers: Now like prepare data collected way scaling. , like know booklets speeded (number mnr). Additionally, intend use different missing treatments actual scaling, preserve missing values data preparation recode right scaling data. eatPrep can help us . reminder, overview different value types IQB uses: missing types","code":"#remotes::install_github(\"https://github.com/sachseka/eatPrep\") library(eatPrep) #> Loading required package: readxl"},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"input","dir":"Articles","previous_headings":"","what":"Input","title":"Getting Started","text":"Information/metadata items stored many different ways, e.g., databases, Excel sheets, sometimes even item names. eatPrep requires metadata specific form, namely series relational tables. eatPrep convenient store tables list. downloading eatPrep package, can find files example tables data folder. Sheets specific names, also columns sheets specific names. inputMinimal contains bare minimum functions eatPrep work, inputList contains additional metadata items (information task’s content).","code":"# Example: inputMinimal inputMinimal <- list(units = inputList$units[ -nrow(inputList$units), c(\"unit\", \"unitAggregateRule\")],                      subunits = inputList$subunits[, c(\"unit\", \"subunit\",\"subunitRecoded\")],                      values = inputList$values[ , c(\"subunit\", \"value\", \"valueRecode\", \"valueType\")],                      unitRecodings = inputList$unitRecodings[ , c(\"unit\", \"value\", \"valueRecode\", \"valueType\")],                      blocks = inputList$blocks,                      booklets = inputList$booklets,                      rotation = inputList$rotation)"},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"input-tables","dir":"Articles","previous_headings":"Input","what":"Input Tables","title":"Getting Started","text":"Let’s look tables bottom top, starting items values. values sheet, define values recode values subitem. see 3 items (called units) inputList bzw. inputMinimal. One mc (item 1), one short response (item 5), one item 3 subitems short response (item 12) values sheet contains possible values subitem scoring information value (e.g., whether true, false, missing). several types missing values. subunits sheet contains information relationship subitems items. information used aggregate subitems items. recoded subitems named differently unrecoded variables original data, can specified via subunitRecoded. type aggregation currently supported eatPrep count number correct subitems per item. unitrecodings contains information values sheet, aggregated items. , value item aggregated number correct subitems recode value gives threshold many subitems need solved obtain credit item. example, I12 3 subitems, one receives credit subitems solved correctly. minimal use case subitem corresponds item. case, value sheet contains information needed recoding items (apart possibly renaming recoded items).","code":"items <- c(\"I01\", \"I05\", \"I12\") subitems <- c(\"I01\", \"I05\", \"I12a\", \"I12b\", \"I12c\")  kable(inputMinimal$units[which(inputMinimal$units$unit %in% items), ]) kable(inputMinimal$values[which(inputMinimal$values$subunit %in% subitems), ]) kable(inputMinimal$subunits[which(inputMinimal$subunits$subunit %in% subitems), ]) kable(inputMinimal$unitRecodings)"},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input Data","title":"Getting Started","text":"several overlapping booklets several blocks booklet. Moreover, unique identifier person additional information student like gender socioeconomic status. one data set per booklet. order prepare data, need construct one large data set. order first need read data R, check data invalid incorrect codes merge data one data set. following different functions described. inputDat gives us first idea data supposed look like.","code":"# looking at the data str(inputDat) #> List of 3 #>  $ booklet1:'data.frame':    100 obs. of  25 variables: #>   ..$ ID   : chr [1:100] \"person100\" \"person101\" \"person102\" \"person103\" ... #>   ..$ hisei: num [1:100] 49 NA 57 32 59 56 55 47 NA 50 ... #>   ..$ I01  : chr [1:100] \"1\" \"9\" \"3\" \"2\" ... #>   ..$ I02  : chr [1:100] \"4\" \"4\" \"4\" \"4\" ... #>   ..$ I03  : chr [1:100] \"1\" \"2\" \"2\" \"3\" ... #>   ..$ I04  : chr [1:100] \"2\" \"2\" \"3\" \"1\" ... #>   ..$ I05  : chr [1:100] \"0\" \"0\" \"0\" \"1\" ... #>   ..$ I06  : chr [1:100] \"0\" \"9\" \"0\" \"1\" ... #>   ..$ I07  : chr [1:100] \"2\" \"2\" \"2\" \"3\" ... #>   ..$ I08  : chr [1:100] \"0\" \"1\" \"0\" \"0\" ... #>   ..$ I09  : chr [1:100] \"2\" \"2\" \"2\" \"3\" ... #>   ..$ I10  : chr [1:100] \"2\" \"1\" \"1\" \"4\" ... #>   ..$ I11  : chr [1:100] \"4\" \"1\" \"3\" \"2\" ... #>   ..$ I12a : chr [1:100] \"1\" \"0\" \"1\" \"0\" ... #>   ..$ I12b : chr [1:100] \"0\" \"9\" \"0\" \"1\" ... #>   ..$ I12c : chr [1:100] \"4\" \"1\" \"2\" \"4\" ... #>   ..$ I13  : chr [1:100] \"9\" \"4\" \"9\" \"4\" ... #>   ..$ I14  : chr [1:100] \"9\" \"4\" \"9\" \"1\" ... #>   ..$ I15  : chr [1:100] \"9\" \"3\" \"9\" \"1\" ... #>   ..$ I16  : chr [1:100] \"9\" \"2\" \"9\" \"2\" ... #>   ..$ I17  : chr [1:100] \"9\" \"3\" \"9\" \"4\" ... #>   ..$ I18  : chr [1:100] \"9\" \"1\" \"9\" \"1\" ... #>   ..$ I19  : chr [1:100] \"9\" \"4\" \"9\" \"2\" ... #>   ..$ I20  : chr [1:100] \"9\" \"1\" \"9\" \"1\" ... #>   ..$ I21  : chr [1:100] \"9\" \"2\" \"9\" \"3\" ... #>  $ booklet2:'data.frame':    100 obs. of  25 variables: #>   ..$ ID   : chr [1:100] \"person200\" \"person201\" \"person202\" \"person203\" ... #>   ..$ hisei: num [1:100] 69 76 47 58 62 78 70 26 57 70 ... #>   ..$ I08  : chr [1:100] \"0\" \"0\" \"1\" \"0\" ... #>   ..$ I09  : chr [1:100] \"2\" \"4\" \"1\" \"2\" ... #>   ..$ I10  : chr [1:100] \"3\" \"1\" \"2\" \"2\" ... #>   ..$ I11  : chr [1:100] \"4\" \"2\" \"1\" \"4\" ... #>   ..$ I12a : chr [1:100] \"1\" \"0\" \"1\" \"1\" ... #>   ..$ I12b : chr [1:100] \"1\" \"0\" \"1\" \"1\" ... #>   ..$ I12c : chr [1:100] \"4\" \"3\" \"2\" \"2\" ... #>   ..$ I13  : chr [1:100] \"4\" \"2\" \"1\" \"2\" ... #>   ..$ I14  : chr [1:100] \"3\" \"4\" \"2\" \"3\" ... #>   ..$ I15  : chr [1:100] \"4\" \"1\" \"4\" \"4\" ... #>   ..$ I16  : chr [1:100] \"4\" \"3\" \"3\" \"2\" ... #>   ..$ I17  : chr [1:100] \"4\" \"1\" \"2\" \"3\" ... #>   ..$ I18  : chr [1:100] \"1\" \"4\" \"3\" \"2\" ... #>   ..$ I19  : chr [1:100] \"2\" \"1\" \"4\" \"3\" ... #>   ..$ I20  : chr [1:100] \"4\" \"9\" \"2\" \"2\" ... #>   ..$ I21  : chr [1:100] \"2\" \"9\" \"2\" \"1\" ... #>   ..$ I22  : chr [1:100] \"1\" \"9\" \"2\" \"1\" ... #>   ..$ I23  : chr [1:100] \"9\" \"9\" \"2\" \"3\" ... #>   ..$ I24  : chr [1:100] \"1\" \"9\" \"3\" \"3\" ... #>   ..$ I25  : chr [1:100] \"1\" \"9\" \"0\" \"0\" ... #>   ..$ I26  : chr [1:100] \"9\" \"9\" \"1\" \"0\" ... #>   ..$ I27  : chr [1:100] \"0\" \"9\" \"1\" \"0\" ... #>   ..$ I28  : chr [1:100] \"1\" \"9\" \"1\" \"0\" ... #>  $ booklet3:'data.frame':    100 obs. of  23 variables: #>   ..$ ID   : chr [1:100] \"person300\" \"person301\" \"person302\" \"person303\" ... #>   ..$ hisei: num [1:100] 49 NA 57 32 59 56 55 47 NA 50 ... #>   ..$ I01  : chr [1:100] \"2\" \"3\" \"2\" \"1\" ... #>   ..$ I02  : chr [1:100] \"4\" \"3\" \"3\" \"3\" ... #>   ..$ I03  : chr [1:100] \"3\" \"1\" \"1\" \"1\" ... #>   ..$ I04  : chr [1:100] \"1\" \"3\" \"1\" \"1\" ... #>   ..$ I05  : chr [1:100] \"0\" \"1\" \"1\" \"0\" ... #>   ..$ I06  : chr [1:100] \"9\" \"1\" \"0\" \"1\" ... #>   ..$ I07  : chr [1:100] \"8\" \"2\" \"2\" \"1\" ... #>   ..$ I15  : chr [1:100] \"3\" \"9\" \"9\" \"9\" ... #>   ..$ I16  : chr [1:100] \"1\" \"3\" \"3\" \"3\" ... #>   ..$ I17  : chr [1:100] \"4\" \"4\" \"4\" \"4\" ... #>   ..$ I18  : chr [1:100] \"4\" \"4\" \"4\" \"4\" ... #>   ..$ I19  : chr [1:100] \"2\" \"9\" \"9\" \"9\" ... #>   ..$ I20  : chr [1:100] \"3\" \"4\" \"2\" \"4\" ... #>   ..$ I21  : chr [1:100] \"3\" \"2\" \"2\" \"2\" ... #>   ..$ I22  : chr [1:100] \"3\" \"4\" \"4\" \"9\" ... #>   ..$ I23  : chr [1:100] \"3\" \"1\" \"1\" \"9\" ... #>   ..$ I24  : chr [1:100] \"1\" \"1\" \"1\" \"9\" ... #>   ..$ I25  : chr [1:100] \"0\" \"1\" \"9\" \"9\" ... #>   ..$ I26  : chr [1:100] \"1\" \"0\" \"9\" \"9\" ... #>   ..$ I27  : chr [1:100] \"0\" \"9\" \"9\" \"9\" ... #>   ..$ I28  : chr [1:100] \"0\" \"9\" \"9\" \"9\" ..."},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"getting-the-data","dir":"Articles","previous_headings":"Input Data","what":"Getting the Data","title":"Getting Started","text":"First, need get information IQB data bank via ZKDaemon, alternatively via SPSS.","code":""},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"items-via-zkdaemon","dir":"Articles","previous_headings":"Input Data > Getting the Data","what":"Items via ZKDaemon","title":"Getting Started","text":"ZKDaemon program used IQB can found IQB internal folders (:). installing can get meta data items specific study using information stored IQB Databases (DB2/DB3/DB4). Alternatively can get meta data SPSS file via ZKDaemon. Within program can set missing types import test design. can produce Excel files, expected following sheets: “units”, “subunits”, “values”, “unitrecoding”, “sav-files”, “params”, “aggregate-missings”, “itemproperties”, “propertylabels”, “booklets”, “blocks”. function readDaemonXlsx() reads Excel file R produce warning sheets missing. needs one character string (filename) containing path, name extension Excel file (.xlsx) produced ZKDaemon. function returns list data frames containing information required data preparation functions. inputList shows example list.","code":"filename <- system.file(\"extdata\", \"inputList.xlsx\", package = \"eatPrep\") inpustList <- readDaemonXlsx(filename) #> Reading sheet 'units'. #> Reading sheet 'subunits'. #> Reading sheet 'values'. #> Reading sheet 'unitrecoding'. #> Reading sheet 'sav-files'. #> Reading sheet 'params'. #> Reading sheet 'aggregate-missings'. #> Reading sheet 'booklets'. #> Reading sheet 'blocks'. str(inpustList) #> List of 9 #>  $ units        :'data.frame':   29 obs. of  6 variables: #>   ..$ unit             : chr [1:29] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ unitLabel        : chr [1:29] \"Animals: Weight of a duck\" \"Animals: Weight of a horse\" \"Animals: Weight of a mouse\" \"Animals: Weight of a cat\" ... #>   ..$ unitDescription  : chr [1:29] NA NA NA NA ... #>   ..$ unitType         : chr [1:29] \"TI\" \"TI\" \"TI\" \"TI\" ... #>   ..$ unitAggregateRule: chr [1:29] NA NA NA NA ... #>   ..$ unitScoreRule    : chr [1:29] NA NA NA NA ... #>  $ subunits     :'data.frame':   30 obs. of  9 variables: #>   ..$ unit               : chr [1:30] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ subunit            : chr [1:30] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ subunitType        : chr [1:30] \"1\" \"1\" \"1\" \"1\" ... #>   ..$ subunitLabel       : chr [1:30] \"Animals: Weight of a duck\" \"Animals: Weight of a horse\" \"Animals: Weight of a mouse\" \"Animals: Weight of a cat\" ... #>   ..$ subunitDescription : chr [1:30] NA NA NA NA ... #>   ..$ subunitPosition    : chr [1:30] \"a)\" \"b)\" \"c)\" \"d)\" ... #>   ..$ subunitTransniveau : chr [1:30] NA NA NA NA ... #>   ..$ subunitRecoded     : chr [1:30] \"I01R\" \"I02R\" \"I03R\" \"I04R\" ... #>   ..$ subunitLabelRecoded: chr [1:30] \"Recoded Animals: Weight of a duck\" \"Recoded Animals: Weight of a horse\" \"Recoded Animals: Weight of a mouse\" \"Recoded Animals: Weight of a cat\" ... #>  $ values       :'data.frame':   220 obs. of  8 variables: #>   ..$ subunit                : chr [1:220] \"I01\" \"I01\" \"I01\" \"I01\" ... #>   ..$ value                  : chr [1:220] \"1\" \"2\" \"3\" \"6\" ... #>   ..$ valueRecode            : chr [1:220] \"0\" \"0\" \"1\" \"mnr\" ... #>   ..$ valueType              : chr [1:220] \"vc\" \"vc\" \"vc\" \"mnr\" ... #>   ..$ valueLabel             : chr [1:220] \"Response option 1 marked\" \"Response option 2 marked\" \"Response option 3 marked\" \"missing not reached\" ... #>   ..$ valueDescription       : chr [1:220] \"Response option 1 marked\" \"Response option 2 marked\" \"Response option 3 marked\" \"missing not reached\" ... #>   ..$ valueLabelRecoded      : chr [1:220] \"0\" \"0\" \"1\" \"mnr\" ... #>   ..$ valueDescriptionRecoded: chr [1:220] NA NA NA NA ... #>  $ unitRecodings:'data.frame':   7 obs. of  7 variables: #>   ..$ unit             : chr [1:7] \"I12\" \"I12\" \"I12\" \"I12\" ... #>   ..$ value            : chr [1:7] \"0\" \"1\" \"2\" \"3\" ... #>   ..$ valueRecode      : chr [1:7] \"0\" \"0\" \"0\" \"1\" ... #>   ..$ valueType        : chr [1:7] \"vc\" \"vc\" \"vc\" \"vc\" ... #>   ..$ valueLabel       : chr [1:7] NA NA NA NA ... #>   ..$ valueDescription : chr [1:7] NA NA NA NA ... #>   ..$ valueLabelRecoded: chr [1:7] NA NA NA NA ... #>  $ savFiles     :'data.frame':   3 obs. of  3 variables: #>   ..$ filename: chr [1:3] \"booklet1.sav\" \"booklet2.sav\" \"booklet3.sav\" #>   ..$ case.id : chr [1:3] \"ID\" \"ID\" \"ID\" #>   ..$ fullname: chr [1:3] NA NA NA #>  $ newID        :'data.frame':   1 obs. of  2 variables: #>   ..$ key  : chr \"master-id\" #>   ..$ value: chr \"ID\" #>  $ aggrMiss     :'data.frame':   7 obs. of  8 variables: #>   ..$ nam: chr [1:7] \"vc\" \"mvi\" \"mnr\" \"mci\" ... #>   ..$ vc : chr [1:7] \"vc\" \"mvi\" \"vc\" \"mci\" ... #>   ..$ mvi: chr [1:7] \"mvi\" \"mvi\" \"err\" \"mci\" ... #>   ..$ mnr: chr [1:7] \"vc\" \"err\" \"mnr\" \"mci\" ... #>   ..$ mci: chr [1:7] \"mci\" \"mci\" \"mci\" \"mci\" ... #>   ..$ mbd: chr [1:7] \"err\" \"err\" \"err\" \"err\" ... #>   ..$ mir: chr [1:7] \"vc\" \"err\" \"mir\" \"mci\" ... #>   ..$ mbi: chr [1:7] \"vc\" \"err\" \"mnr\" \"mci\" ... #>  $ booklets     :'data.frame':   3 obs. of  4 variables: #>   ..$ booklet: chr [1:3] \"booklet1\" \"booklet2\" \"booklet3\" #>   ..$ block1 : chr [1:3] \"bl1\" \"bl4\" \"bl3\" #>   ..$ block2 : chr [1:3] \"bl2\" \"bl3\" \"bl1\" #>   ..$ block3 : chr [1:3] \"bl3\" \"bl2\" \"bl4\" #>  $ blocks       :'data.frame':   30 obs. of  3 variables: #>   ..$ subunit             : chr [1:30] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ block               : chr [1:30] \"bl1\" \"bl1\" \"bl1\" \"bl1\" ... #>   ..$ subunitBlockPosition: chr [1:30] \"1\" \"2\" \"3\" \"4\" ..."},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"merkmalsauszug","dir":"Articles","previous_headings":"Input Data > Getting the Data","what":"Merkmalsauszug","title":"Getting Started","text":"software IQB Item-DB produces Excel files named “Merkmalsauszug” using information stored IQB Databases. file expected sheets: “Itemmerkmale”, “Aufgabenmerkmale”. order doesn’t matter. file contains information attributes items exercises. function readMerkmalXlsx() read Excel file R produce warning sheets missing wrongly specified. needs one character string (filename) containing path, name extension Excel file (.xlsx) produced IQB Item-DB. Per default Item-ID created without converting numbers lowercase letters (tolcl) merged data frame contaning “Itemmerkmale” “Aufgabenmerkmale” created (alleM). function returns list data frames containing Itemmerkmale, Aufgabenmerkmale AlleMerkmale (optional).","code":"filename <- system.file(\"extdata\", \"itemmerkmale.xlsx\", package = \"eatPrep\") readMerkmalXlsx(filename, tolcl = FALSE, alleM = TRUE) #> Reading sheet 'Aufgabenmerkmale'. #> Reading sheet 'Itemmerkmale'. #> Data frame 'AlleMerkmale' has been created. #> $Aufgabenmerkmale #>                      Aufgabe Zeit.A                     AufgID AufgTitel #> 1  Animals: Weight of a duck   0:00  Animals: Weight of a duck        NA #> 2 Animals: Weight of a horse   0:00 Animals: Weight of a horse        NA #>  #> $Itemmerkmale #>                      Aufgabe Teilaufgabe Item Zeit.I Anforderungsbereich.MaP #> 1  Animals: Weight of a duck           A   01   0:00                       I #> 2 Animals: Weight of a horse           A   01   0:00                       I #> 3 Animals: Weight of a horse           B   02   0:00                      II #>   Bildungsstandards.MaP.allgemeine                Itemtyp.5er #> 1                               1a GA - Geschlossen Ankreuzen #> 2                             <NA> GA - Geschlossen Ankreuzen #> 3                             <NA> GA - Geschlossen Ankreuzen #>                       AufgID AufgTitel                       ItemID #> 1  Animals: Weight of a duck        NA  Animals: Weight of a duck01 #> 2 Animals: Weight of a horse        NA Animals: Weight of a horse01 #> 3 Animals: Weight of a horse        NA Animals: Weight of a horse02 #>  #> $AlleMerkmale #>                       AufgID                    Aufgabe Teilaufgabe Item #> 1  Animals: Weight of a duck  Animals: Weight of a duck           A   01 #> 2 Animals: Weight of a horse Animals: Weight of a horse           A   01 #> 3 Animals: Weight of a horse Animals: Weight of a horse           B   02 #>                         ItemID Zeit.I Anforderungsbereich.MaP #> 1  Animals: Weight of a duck01   0:00                       I #> 2 Animals: Weight of a horse01   0:00                       I #> 3 Animals: Weight of a horse02   0:00                      II #>   Bildungsstandards.MaP.allgemeine                Itemtyp.5er Zeit.A #> 1                               1a GA - Geschlossen Ankreuzen   0:00 #> 2                             <NA> GA - Geschlossen Ankreuzen   0:00 #> 3                             <NA> GA - Geschlossen Ankreuzen   0:00"},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"spss-data","dir":"Articles","previous_headings":"Input Data > Getting the Data","what":"SPSS Data","title":"Getting Started","text":"get input SPSS data files, readSpss() reads data R converts variables class character. function needs name fo SPSS data file option specify attributes. information use help function ?readSpss.","code":"readSpss(file)"},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"checking-data","dir":"Articles","previous_headings":"Input Data","what":"Checking Data","title":"Getting Started","text":"reading data, need check, whether right format missing codes assigned correctly.","code":""},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"checkdata","dir":"Articles","previous_headings":"Input Data > Checking Data","what":"checkData()","title":"Getting Started","text":"checkData() checks data frames missing duplicated entries ID variable, persons /variables without valid codes, generally invalid codes. results check written console. function needs data frame checked (dat) name (datnam), especially multpile data frames (e.g. list data frames). Furthermore needs data frames code, subunit unit information (values, subunits units), string ID column name (ID). can turn printing information console verbose. Examples data frames values, subunits units can found typing inputList console.","code":"checkData(dat, datnam, values, subunits, units, ID = NULL, verbose = TRUE)"},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"checkdesign","dir":"Articles","previous_headings":"Input Data > Checking Data","what":"checkDesign()","title":"Getting Started","text":"checkDesign() checks whether data frame corresponds particular rotated block design, .e. whether persons valid codes items presented one consistent missing code items presented . function also needs data frame checked (dat), well data frames containing information number column names blocks booklet (booklets), names subunits order within block (blocks) participant worked booklet (rotation). sysMis specifies missing code items administered participant id indicates name participant identifier variable dat. subunits optional argument identify names recoded subunits. can turn printing information verbose. inputDat inputList examples data frames supposed look like. copy paste following code console, can look data frames.","code":"checkDesign(dat, booklets, blocks, rotation, sysMis=\"NA\", id=\"ID\", subunits = NULL, verbose = TRUE) inputDat inputList"},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"merging-data","dir":"Articles","previous_headings":"Input Data","what":"Merging Data","title":"Getting Started","text":"Now checked data frames meet requirements, can merge list data frames single data frame using mergeData(). need list data frames, like inputDat contains data three booklets. function returns data frame containing unique cases unique variables. cases variables original data sets kept matched. mergeData() provides detailed diagnostics value mismatches. two identically named columns two data sets identical values, NAs replaced valid codes stemming data set(s) two different valid values found, first value kept dropped, user informed mismatch. Additionally, NA resulting merge (e.g., repeated block designs) can replaced customed character missing facilitate future data preparation merged data set. See collapseMissings() details supported character missings functions eatPrep package. merging data frames function need specify least two arguments: newID datList. newID character vector length one indicating name identifier variable (ID) merged data set /name ID every data frame datList, specified differently oldIDs. datList list data frames merged, e.g. inputDat. Furthermore, can specify arguments, default options, don’t need . example IDs changed via oldIDs NAs replaced “mbd” (missing design). information use help function ?mergeData.","code":"mergedDataset <- mergeData(newID = \"ID\", datList = inputDat) #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. str(mergedDataset) #> 'data.frame':    300 obs. of  32 variables: #>  $ ID   : chr  \"person100\" \"person101\" \"person102\" \"person103\" ... #>  $ hisei: num  49 NA 57 32 59 56 55 47 NA 50 ... #>  $ I01  : chr  \"1\" \"9\" \"3\" \"2\" ... #>  $ I02  : chr  \"4\" \"4\" \"4\" \"4\" ... #>  $ I03  : chr  \"1\" \"2\" \"2\" \"3\" ... #>  $ I04  : chr  \"2\" \"2\" \"3\" \"1\" ... #>  $ I05  : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I06  : chr  \"0\" \"9\" \"0\" \"1\" ... #>  $ I07  : chr  \"2\" \"2\" \"2\" \"3\" ... #>  $ I08  : chr  \"0\" \"1\" \"0\" \"0\" ... #>  $ I09  : chr  \"2\" \"2\" \"2\" \"3\" ... #>  $ I10  : chr  \"2\" \"1\" \"1\" \"4\" ... #>  $ I11  : chr  \"4\" \"1\" \"3\" \"2\" ... #>  $ I12a : chr  \"1\" \"0\" \"1\" \"0\" ... #>  $ I12b : chr  \"0\" \"9\" \"0\" \"1\" ... #>  $ I12c : chr  \"4\" \"1\" \"2\" \"4\" ... #>  $ I13  : chr  \"9\" \"4\" \"9\" \"4\" ... #>  $ I14  : chr  \"9\" \"4\" \"9\" \"1\" ... #>  $ I15  : chr  \"9\" \"3\" \"9\" \"1\" ... #>  $ I16  : chr  \"9\" \"2\" \"9\" \"2\" ... #>  $ I17  : chr  \"9\" \"3\" \"9\" \"4\" ... #>  $ I18  : chr  \"9\" \"1\" \"9\" \"1\" ... #>  $ I19  : chr  \"9\" \"4\" \"9\" \"2\" ... #>  $ I20  : chr  \"9\" \"1\" \"9\" \"1\" ... #>  $ I21  : chr  \"9\" \"2\" \"9\" \"3\" ... #>  $ I22  : chr  NA NA NA NA ... #>  $ I23  : chr  NA NA NA NA ... #>  $ I24  : chr  NA NA NA NA ... #>  $ I25  : chr  NA NA NA NA ... #>  $ I26  : chr  NA NA NA NA ... #>  $ I27  : chr  NA NA NA NA ... #>  $ I28  : chr  NA NA NA NA ... mergedDataset2 <- mergeData(newID = \"idstud\", datList = inputDat, oldIDs = c(\"ID\", \"ID\", \"ID\"), addMbd = TRUE) #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. #> Start adding mbd according to data pattern. str(mergedDataset2) #> 'data.frame':    300 obs. of  32 variables: #>  $ idstud: chr  \"person100\" \"person101\" \"person102\" \"person103\" ... #>  $ hisei : num  49 NA 57 32 59 56 55 47 NA 50 ... #>  $ I01   : chr  \"1\" \"9\" \"3\" \"2\" ... #>  $ I02   : chr  \"4\" \"4\" \"4\" \"4\" ... #>  $ I03   : chr  \"1\" \"2\" \"2\" \"3\" ... #>  $ I04   : chr  \"2\" \"2\" \"3\" \"1\" ... #>  $ I05   : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I06   : chr  \"0\" \"9\" \"0\" \"1\" ... #>  $ I07   : chr  \"2\" \"2\" \"2\" \"3\" ... #>  $ I08   : chr  \"0\" \"1\" \"0\" \"0\" ... #>  $ I09   : chr  \"2\" \"2\" \"2\" \"3\" ... #>  $ I10   : chr  \"2\" \"1\" \"1\" \"4\" ... #>  $ I11   : chr  \"4\" \"1\" \"3\" \"2\" ... #>  $ I12a  : chr  \"1\" \"0\" \"1\" \"0\" ... #>  $ I12b  : chr  \"0\" \"9\" \"0\" \"1\" ... #>  $ I12c  : chr  \"4\" \"1\" \"2\" \"4\" ... #>  $ I13   : chr  \"9\" \"4\" \"9\" \"4\" ... #>  $ I14   : chr  \"9\" \"4\" \"9\" \"1\" ... #>  $ I15   : chr  \"9\" \"3\" \"9\" \"1\" ... #>  $ I16   : chr  \"9\" \"2\" \"9\" \"2\" ... #>  $ I17   : chr  \"9\" \"3\" \"9\" \"4\" ... #>  $ I18   : chr  \"9\" \"1\" \"9\" \"1\" ... #>  $ I19   : chr  \"9\" \"4\" \"9\" \"2\" ... #>  $ I20   : chr  \"9\" \"1\" \"9\" \"1\" ... #>  $ I21   : chr  \"9\" \"2\" \"9\" \"3\" ... #>  $ I22   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I23   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I24   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I25   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I26   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I27   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I28   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ..."},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"recoding-the-data","dir":"Articles","previous_headings":"","what":"Recoding the Data","title":"Getting Started","text":"importing data making sure right format, next step adjust missing values.","code":""},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"recodedata","dir":"Articles","previous_headings":"Recoding the Data","what":"recodeData()","title":"Getting Started","text":"First, recode data sets several kinds missings values. , need recode data sets special consideration missing values. See collapseMissings() supported types missing values. recodeData() recodes specified data frames give warnings, missing incomplete recode information found. Values without recode information recoded. Examples data frames values subunits can found copy-pasting following code console: recodeData() uses recode information two data frames recodes variables dat accordingly. columns named according specifications subunits$subunitRecoded, subunits provided, item names changed recoded items.","code":"inputList$values inputList$subunits datRec <- recodeData(dat = inputDat[[1]], values = inputList$values, subunits = inputList$subunits, verbose = TRUE) #>  #> Found no recode information for variable(s):  #> ID, hisei.  #> This/These variable(s) will not be recoded. #>  #> Variables... I01, I02, I03, I04, I05, I06, I07, I08, I09, I10, I11, I12a, I12b, I12c, I13, I14, I15, I16, I17, I18, I19, I20, I21 #> ...have been recoded. str(datRec) #> 'data.frame':    100 obs. of  25 variables: #>  $ ID   : chr  \"person100\" \"person101\" \"person102\" \"person103\" ... #>  $ hisei: chr  \"49\" NA \"57\" \"32\" ... #>  $ I01R : chr  \"0\" \"mbi\" \"1\" \"0\" ... #>  $ I02R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I03R : chr  \"0\" \"1\" \"1\" \"0\" ... #>  $ I04R : chr  \"1\" \"1\" \"0\" \"0\" ... #>  $ I05R : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I06R : chr  \"0\" \"mbi\" \"0\" \"1\" ... #>  $ I07R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I08R : chr  \"0\" \"1\" \"0\" \"0\" ... #>  $ I09R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I10R : chr  \"1\" \"0\" \"0\" \"0\" ... #>  $ I11R : chr  \"0\" \"0\" \"1\" \"0\" ... #>  $ I12aR: chr  \"1\" \"0\" \"1\" \"0\" ... #>  $ I12bR: chr  \"0\" \"mbi\" \"0\" \"1\" ... #>  $ I12cR: chr  \"1\" \"0\" \"0\" \"1\" ... #>  $ I13R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I14R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I15R : chr  \"mbi\" \"0\" \"mbi\" \"1\" ... #>  $ I16R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I17R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I18R : chr  \"mbi\" \"1\" \"mbi\" \"1\" ... #>  $ I19R : chr  \"mbi\" \"1\" \"mbi\" \"0\" ... #>  $ I20R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I21R : chr  \"mbi\" \"0\" \"mbi\" \"1\" ..."},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"mnrcoding","dir":"Articles","previous_headings":"Recoding the Data","what":"mnrCoding()","title":"Getting Started","text":"can convert missing responses coded “missing intention” (mbi) end block items “missing reached” (mnr) via mnrCoding(). function returns data frame “missing reached” coded mnr. person least one mnr returned data set names recoded variables given attribute dat. work need specify following arguments, don’t default settings: arguments default values can specify, don’t . nMbi, instance, specifies number subunits end block need coded mbi. default 2, .e. last second last subitem block coded mbi, subunits, well preceding subunits coded mbi, recoded mnr. nMbi larger number subunits given block, subitem block recoded. subunits block coded mbi, none recoded mnr. `nMbi needs > 0. subunits default NULL, specify data frame, recodeMbiToMnr expects find recoded subunits dat. Examples data frames booklets, blocks, rotation subunits can found via inputList. example use case mnrCoding(). first two functions (automateDataPretatration() mergeData()) create data frame dat mnrCoding(). Type ?mnrCoding console learn .","code":"prepDat <- automateDataPreparation(inputList = inputList,      datList = inputDat, readSpss = FALSE, checkData=FALSE,      mergeData = TRUE, recodeData=TRUE, aggregateData=FALSE,      scoreData= FALSE, writeSpss=FALSE, verbose = TRUE) prepDat2 <- mergeData(\"ID\", list(prepDat, inputList$rotation)) mnrDat <- mnrCoding(dat = prepDat2, pid = \"ID\",      booklets = inputList$booklets, blocks = inputList$blocks,      rotation.id = \"booklet\", breaks = c(1, 2),      subunits = inputList$subunits, nMbi = 2, mbiCode = \"mbi\",      mnrCode = \"mnr\", invalidCodes = c(\"mbd\", \"mir\", \"mci\"),      verbose = TRUE) #> ...identifying items in data (reference is blocks$subunit) #> Variables in data not recognized as items: #> ID, hisei, booklet #> If some of these excluded variables should have been identified as items (and thus be used for mnr coding) check 'blocks', 'subunits', 'dat'. #> ...identifying items with no mbi-codes ('mbi'): #> I04R, I08R #> If you expect mbi-codes on these variables check your data and option 'mbiCode' #> mnr statistics: #>      mnr cells: 553 #>      unique cases with at least one mnr code: 89 #>      unique items with at least one mnr code: 16 #> unique cases ('ID') per booklet and booklet section (0s omitted): #>    booklet booklet.section N.ID #> 1 booklet1               2   11 #> 2 booklet1               3   28 #> 3 booklet2               1   28 #> 4 booklet2               2   11 #> 5 booklet2               3    1 #> 6 booklet3               3   31 #> start recoding (item-wise) #> done #> elapsed time: 0.1 secs"},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"aggregating-the-data","dir":"Articles","previous_headings":"","what":"Aggregating the Data","title":"Getting Started","text":"recoding missing values, subunits combined one one via aggregateData(). function needs three data frames: one containing data aggregated (dat), one containing subunit information (subunits), one containing unit information (units). Optionally, can specify missing values aggregated (aggregatemissings) like example, column names returned data frame (recodedData), instance. Type ?aggregateData console learn .","code":"am <- matrix(c(   \"vc\" , \"mvi\", \"vc\" , \"mci\", \"err\", \"vc\" , \"mbi\", \"err\",   \"mvi\", \"mvi\", \"err\", \"mci\", \"err\", \"err\", \"err\", \"err\",   \"vc\" , \"err\", \"mnr\", \"mci\", \"err\", \"mir\", \"mnr\", \"err\",   \"mci\", \"mci\", \"mci\", \"mci\", \"err\", \"mci\", \"mci\", \"err\",   \"err\", \"err\", \"err\", \"err\", \"mbd\", \"err\", \"err\", \"err\",   \"vc\" , \"err\", \"mir\", \"mci\", \"err\", \"mir\", \"mir\", \"err\",   \"mbi\", \"err\", \"mnr\", \"mci\", \"err\", \"mir\", \"mbi\", \"err\",   \"err\", \"err\", \"err\", \"err\", \"err\", \"err\", \"err\", \"err\" ),   nrow = 8, ncol = 8, byrow = TRUE)  dimnames(am) <-   list(c(\"vc\" ,\"mvi\", \"mnr\", \"mci\",  \"mbd\", \"mir\", \"mbi\", \"err\"),        c(\"vc\" ,\"mvi\", \"mnr\", \"mci\",  \"mbd\", \"mir\", \"mbi\", \"err\")) # using datRec from the chapter \"recodeData()\" datAggr <- aggregateData(datRec, inputList$subunits, inputList$units,     aggregatemissings = am, rename = TRUE, recodedData = TRUE,     suppressErr = TRUE, recodeErr = \"mci\", verbose = TRUE) #> All aggregation rules will be defaulted to 'SUM', because no other type is currently supported. #> Found 20 unit(s) with only one subunit in 'dat'. This/these subunit(s) will not be aggregated and renamed to their respective unit name(s). #> 1 units were aggregated: I12."},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"scoring-the-data","dir":"Articles","previous_headings":"","what":"Scoring the Data","title":"Getting Started","text":"next step score data set special consideration missing values. function scoreData() similar recodeData(), defaults better suited scoring. scoreData() give warnings incomplete scoring information found. Values without scoring information scored. , need specify three data frames. One data frame get completing steps far using automateDataPrepatation (dat), one information scoring units (unitrecodings), one subunit information (subunits). Examples last two data frames can found via inputList.","code":"prepDat <- automateDataPreparation (inputList = inputList, datList = inputDat,     readSpss = FALSE, checkData=FALSE, mergeData = TRUE, recodeData=TRUE,     aggregateData=TRUE, scoreData= FALSE, writeSpss=FALSE, verbose = TRUE) datSco <- scoreData(prepDat, inputList$unitRecodings, inputList$subunits,     verbose = TRUE) #> ✔ 1 unit was scored: `I12`."},{"path":"https://sachseka.github.io/eatPrep/articles/getting_started.html","id":"collapsing-the-data","dir":"Articles","previous_headings":"","what":"Collapsing the Data","title":"Getting Started","text":"last step recode character missings numerical types like 0 NA collapseMissings(). variables need converted numeric, well, can pass data set eatModel afterwards. need data frame returned recodeData, called datRec earlier (dat). missing.rule list containing information character missings converted 0or NA. default settings, can adapt needed. Type ?collapseMissings console learn . data frame can now use processing eatModel package.","code":"datColMis <- collapseMissings(datRec)"},{"path":"https://sachseka.github.io/eatPrep/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karoline . Sachse. Author, maintainer. Nicole Mahler. Author. Philipp Franikowski. Author. Martin Hecht. Contributor. Sebastian Weirich. Contributor. Schumann Kristoph. Contributor. Edna Grewers. Contributor.","code":""},{"path":"https://sachseka.github.io/eatPrep/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sachse K, Mahler N, Franikowski P (2025). eatPrep: Prepare Data IRT Analyses. R package version 1.0.4, https://sachseka.github.io/eatPrep/.","code":"@Manual{,   title = {eatPrep: Prepare Data for IRT Analyses},   author = {Karoline A. Sachse and Nicole Mahler and Philipp Franikowski},   year = {2025},   note = {R package version 1.0.4},   url = {https://sachseka.github.io/eatPrep/}, }"},{"path":"https://sachseka.github.io/eatPrep/index.html","id":"eatprep-","dir":"","previous_headings":"","what":"Prepare Data for IRT Analyses","title":"Prepare Data for IRT Analyses","text":"goal eatPrep prepare test item data IRT scaling using meta data provided pre-defined list structure + many tools & checks.","code":""},{"path":"https://sachseka.github.io/eatPrep/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Prepare Data for IRT Analyses","text":"can install released version eatPrep Github :","code":"remotes::install_github(\"sachseka/eatPrep\")"},{"path":"https://sachseka.github.io/eatPrep/reference/aggregateData.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Datasets With Several Kinds of Missing Values — aggregateData","title":"Aggregate Datasets With Several Kinds of Missing Values — aggregateData","text":"Aggregate datasets constraints missing values","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/aggregateData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Datasets With Several Kinds of Missing Values — aggregateData","text":"","code":"aggregateData(dat, subunits, units, aggregatemissings = NULL,     rename = FALSE, recodedData = TRUE, suppressErr = FALSE,     recodeErr = \"mci\", verbose = FALSE)"},{"path":"https://sachseka.github.io/eatPrep/reference/aggregateData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Datasets With Several Kinds of Missing Values — aggregateData","text":"dat data frame containing data aggregated. subunits data frame subunit information. See ‘Details’. units data frame unit information. See ‘Details’. aggregatemissings Optional: symmetrical n x n matrix information missing values aggregated. matrix given, default used. See 'Examples'. rename Logical indicating whether units one subunit renamed unit name? Default FALSE. recodedData Logical indicating whether colnames dat subunit names (subunits$subunit) recoded subunit names (subunits$subunitRecoded). Default TRUE, meaning colnames recoded subitem names. suppressErr Logical indicating whether aggregated cells err (see ‘Details’) recoded another value. recodeErr Character vector length 1 indicating err recoded. argument evaluated suppressErr = TRUE verbose Logical. TRUE additional information printed.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/aggregateData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate Datasets With Several Kinds of Missing Values — aggregateData","text":"aggregateData aggregates units data frames special consideration missing values.aggregation missing values specified argument aggregatemissings. rownames colnames n x n matrix correspond missing codes data (see collapseMissings supported missing values). Additionally, values vc (valid code) err (error) used. aggregatemissings data frame, coerced matrix first column data frame transformed rownames matrix. warning given matrix symmetrical. aggregateData combines subunits one one, .e. aggregates first two subunits unit, adds third subunit new aggregated variable continues manner subunits aggregated. every step process value first variable (e.g., aggregated variable previous step) matched rownames aggregatemissings corresponding value second variable (e.g., next subitem aggregated) matched colnames aggregatemissings. new value aggregated variable therefore value aggregatemissings[firstVar, secondVar].value final aggregated variable vc, either mean sum subunits calculated. rule given units$unitAggregateRule determines one chosen, SUM default column units$unitAggregateRule empty. user can specify combinations missing values occur simultaneously one unit setting respective cell aggregatemissings err. example, unlikely one subunit administered (missing design, mbd) another subunit unit intentionally left blank person working test booklet (missing intention mbi). Thus, combination missing values defaulted produce error (err) aggregated variable. aggregation produces err point, produce warning. Values err can recoded different value specifying arguments suppressErr recodeErr. Examples data frames subunits units can found via data(inputList).","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/aggregateData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Datasets With Several Kinds of Missing Values — aggregateData","text":"data frame aggregated units , rename = TRUE, renamed subunits.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/aggregateData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Aggregate Datasets With Several Kinds of Missing Values — aggregateData","text":"Nicole Mahler, Karoline Sachse, Anna Lenski","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/aggregateData.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Aggregate Datasets With Several Kinds of Missing Values — aggregateData","text":"Missings correctly aggregated values correspond values aggregatemissings. aggregateData check value types whether codes valid. Use checkData recodeData using aggregateData therefore strongly recommended.","code":""},{"path":[]},{"path":"https://sachseka.github.io/eatPrep/reference/aggregateData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Datasets With Several Kinds of Missing Values — aggregateData","text":"","code":"data(inputDat) data(inputList)  dat1 <- inputDat[[1]]  # get first dataset from inputDat  # recode data datRec <- recodeData(dat1, inputList$values, inputList$subunits)  # define matrix for missing aggregation: # combination of valid code and missing by intention produces missing by intention # --> if any subunit is missing by intention, # the aggregated unit is coded missing by intention  am <- matrix(c(   \"vc\" , \"mvi\", \"vc\" , \"mci\", \"err\", \"vc\" , \"mbi\", \"err\",   \"mvi\", \"mvi\", \"err\", \"mci\", \"err\", \"err\", \"err\", \"err\",   \"vc\" , \"err\", \"mnr\", \"mci\", \"err\", \"mir\", \"mnr\", \"err\",   \"mci\", \"mci\", \"mci\", \"mci\", \"err\", \"mci\", \"mci\", \"err\",   \"err\", \"err\", \"err\", \"err\", \"mbd\", \"err\", \"err\", \"err\",   \"vc\" , \"err\", \"mir\", \"mci\", \"err\", \"mir\", \"mir\", \"err\",   \"mbi\", \"err\", \"mnr\", \"mci\", \"err\", \"mir\", \"mbi\", \"err\",   \"err\", \"err\", \"err\", \"err\", \"err\", \"err\", \"err\", \"err\" ),   nrow = 8, ncol = 8, byrow = TRUE)  dimnames(am) <-   list(c(\"vc\" ,\"mvi\", \"mnr\", \"mci\",  \"mbd\", \"mir\", \"mbi\", \"err\"),        c(\"vc\" ,\"mvi\", \"mnr\", \"mci\",  \"mbd\", \"mir\", \"mbi\", \"err\"))  print(am) #>     vc    mvi   mnr   mci   mbd   mir   mbi   err   #> vc  \"vc\"  \"mvi\" \"vc\"  \"mci\" \"err\" \"vc\"  \"mbi\" \"err\" #> mvi \"mvi\" \"mvi\" \"err\" \"mci\" \"err\" \"err\" \"err\" \"err\" #> mnr \"vc\"  \"err\" \"mnr\" \"mci\" \"err\" \"mir\" \"mnr\" \"err\" #> mci \"mci\" \"mci\" \"mci\" \"mci\" \"err\" \"mci\" \"mci\" \"err\" #> mbd \"err\" \"err\" \"err\" \"err\" \"mbd\" \"err\" \"err\" \"err\" #> mir \"vc\"  \"err\" \"mir\" \"mci\" \"err\" \"mir\" \"mir\" \"err\" #> mbi \"mbi\" \"err\" \"mnr\" \"mci\" \"err\" \"mir\" \"mbi\" \"err\" #> err \"err\" \"err\" \"err\" \"err\" \"err\" \"err\" \"err\" \"err\"  datAggr <- aggregateData(datRec, inputList$subunits, inputList$units,     aggregatemissings = am, rename = TRUE, recodedData = TRUE,     suppressErr = TRUE, recodeErr = \"mci\", verbose = TRUE) #> All aggregation rules will be defaulted to 'SUM', because no other type is currently supported. #> Found 20 unit(s) with only one subunit in 'dat'. This/these subunit(s) will not be aggregated and renamed to their respective unit name(s). #> 1 units were aggregated: I12."},{"path":"https://sachseka.github.io/eatPrep/reference/automateDataPreparation.html","id":null,"dir":"Reference","previous_headings":"","what":"Automate Data Preparation using Functions from Package eatPrep — automateDataPreparation","title":"Automate Data Preparation using Functions from Package eatPrep — automateDataPreparation","text":"function facilitates automated data preparation wraps functions eatPrep package.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/automateDataPreparation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automate Data Preparation using Functions from Package eatPrep — automateDataPreparation","text":"","code":"automateDataPreparation(datList = NULL, inputList, path = NULL,     readSpss, checkData,  mergeData, recodeData, recodeMnr = FALSE,     aggregateData, scoreData, writeSpss, collapseMissings = FALSE,     filedat = \"mydata.txt\", filesps = \"readmydata.sps\", breaks=NULL,     nMbi = 2, rotation.id = NULL, suppressErr = FALSE, recodeErr = \"mci\",     aggregatemissings = NULL, rename = TRUE, recodedData = TRUE,     addLeadingZeros=FALSE, truncateSpaceChar = TRUE,     newID = NULL, oldIDs = NULL, addMbd = TRUE, overwriteMbdSilently=TRUE,     missing.rule = list(mvi = 0, mnr = 0, mci = NA, mbd = NA, mir = 0, mbi = 0),     verbose=FALSE)"},{"path":"https://sachseka.github.io/eatPrep/reference/automateDataPreparation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automate Data Preparation using Functions from Package eatPrep — automateDataPreparation","text":"datList list data frames (see data(inputDat)). NULL, readSPSS TRUE. case, function attempts read SPSS .sav files. inputList list data frames containing neccessary information data preparaton (see data(inputList) details). path character vector containing path required writeSpss. Default current R working directory. readSpss Logical: TRUE, function readSpss called. checkData Logical: TRUE, function checkData called. mergeData Logical: TRUE, function mergeData called. recodeData Logical: TRUE, function recodeData called. recodeMnr Logical: TRUE, function mnrCoding called. aggregateData Logical: TRUE, function aggregateData called. scoreData Logical: TRUE, function scoreData called. collapseMissings Logical: TRUE, function collapseMissings called data frame recoded missing values according argument missing.rule returned. writeSpss Logical: TRUE, function writeSpss called. filedat character string containing name output data file writeSpss. filesps character string containing name output syntax file writeSpss. breaks Numeric vector passed function mnrCoding containing number blocks mbi shall recoded mnr, e.g., c(1,2) specify breaks first second block. numeric vector (argument used ). nMbi Numeric vector length 1 passed function mnrCoding containing number mbi-Codes required end block code mnr. Needs > 0. rotation.id Character vector length 1 passed function mnrCoding indicating name rotation indicator (e.g. “booklet”) dataset. suppressErr Logical passed function aggregateData indicating whether aggregated cells err recoded another value.. recodeErr Character vector length 1 passed function aggregateData indicating err recoded. argument evaluated suppressErr = TRUE . missing.rule named list definitions recode different types missings dataset. writeSPSS = TRUE, missing values recoded 0 NA prior writing SPSS dataset. See collapseMissings supported missing values. aggregatemissings symmetrical n x n matrix data frame inputList$aggrMiss passed function aggregateData information missing values aggregated. matrix given, default used. See 'Details' aggregateData. rename Logical passed function aggregateData indicating whether units one subunit renamed unit name? Default FALSE. recodedData Logical passed function aggregateDataindicating whether colnames dat subunit names (subunits$subunit) recoded subunit names (subunits$subunitRecoded). Default TRUE, meaning colnames recoded subitem names. addLeadingZeros logical. See readSpss. truncateSpaceChar logical. See readSpss. newID character string containing case IDs name final data frame. Default ID character string specified inputList$newID. oldIDs vector character strings containing IDs names original SPSS datasets. Default specified inputList$savFiles. addMbd Logical. Whether mbd added merging, see mergeData. Also used prep2GADS. overwriteMbdSilently Logical. Whether mbd overwritten silently non-empty values available merging, see mergeData. verbose Logical: TRUE, progress additional information printed.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/automateDataPreparation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automate Data Preparation using Functions from Package eatPrep — automateDataPreparation","text":"data frame resulting final data preparation step.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/automateDataPreparation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automate Data Preparation using Functions from Package eatPrep — automateDataPreparation","text":"Karoline Sachse","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/automateDataPreparation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automate Data Preparation using Functions from Package eatPrep — automateDataPreparation","text":"","code":"data(inputList) data(inputDat) preparedData <- automateDataPreparation(inputList = inputList,     datList = inputDat,  path = getwd(),     readSpss = FALSE, checkData = TRUE,  mergeData = TRUE,     recodeData = TRUE, recodeMnr = TRUE, breaks = c(1,2),     aggregateData = TRUE, scoreData = TRUE,     writeSpss = FALSE, verbose = TRUE) #> Starting automateDataPreparation 2025-02-19 15:54:16.490644 #>  #> Check data... #>  #> Checking dataset booklet1 #> Only valid codes in ID variable. #> No duplicated entries in ID variable. #> No duplicated variable names. #> Found no variable information about variable(s) hisei. This/These variables will not be checked for missings and invalid codes. #> Found no invalid codes. #>  #> Checking dataset booklet2 #> Only valid codes in ID variable. #> No duplicated entries in ID variable. #> No duplicated variable names. #> Found no variable information about variable(s) hisei. This/These variables will not be checked for missings and invalid codes. #> Found no invalid codes. #>  #> Checking dataset booklet3 #> Only valid codes in ID variable. #> No duplicated entries in ID variable. #> No duplicated variable names. #> Found no variable information about variable(s) hisei. This/These variables will not be checked for missings and invalid codes. #> Found no invalid codes. #>  #> Start merging. #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. #> Start adding mbd according to data pattern. #>  #> Start recoding. #>  #> Found no recode information for variable(s):  #> ID, hisei.  #> This/These variable(s) will not be recoded. #>  #> Variables... I01, I02, I03, I04, I05, I06, I07, I08, I09, I10, I11, I12a, I12b, I12c, I13, I14, I15, I16, I17, I18, I19, I20, I21, I22, I23, I24, I25, I26, I27, I28 #> ...have been recoded. #>  #> Start recoding Mbi to Mnr. #> ...identifying items in data (reference is blocks$subunit) #> Variables in data not recognized as items: #> ID, booklet, hisei #> If some of these excluded variables should have been identified as items (and thus be used for mnr coding) check 'blocks', 'subunits', 'dat'. #> ...identifying items with no mbi-codes ('mbi'): #> I04R, I08R #> If you expect mbi-codes on these variables check your data and option 'mbiCode' #> mnr statistics: #>      mnr cells: 553 #>      unique cases with at least one mnr code: 89 #>      unique items with at least one mnr code: 16 #> unique cases ('ID') per booklet and booklet section (0s omitted): #>    booklet booklet.section N.ID #> 1 booklet1               2   11 #> 2 booklet1               3   28 #> 3 booklet2               1   28 #> 4 booklet2               2   11 #> 5 booklet2               3    1 #> 6 booklet3               3   31 #>  #> start recoding (item-wise) #> done #> elapsed time: 0.1 secs #>  #> Start aggregating #> Since inputList$aggrMiss exists, this will be used instead of default. #> All aggregation rules will be defaulted to 'SUM', because no other type is currently supported. #> Found 27 unit(s) with only one subunit in 'dat'. This/these subunit(s) will not be aggregated and renamed to their respective unit name(s). #> 1 units were aggregated: I12. #>  #> Start scoring. #> ✔ 1 unit was scored: `I12`. #>  #> No SPSS-File has been written. #>  #> Missings are UNcollapsed. #> automateDataPreparation terminated successfully! 2025-02-19 15:54:16.939553"},{"path":"https://sachseka.github.io/eatPrep/reference/cat.pbc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Item Discrimination for Each Category of Categorical Variables — catPbc","title":"Calculate Item Discrimination for Each Category of Categorical Variables — catPbc","text":"catPbc calculates discrimination statistics categories categorical variables, .e. correlations category total score test. information can useful determining categories item influencing overall fit discrimination item response scaling applications /find mistakes recoding.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/cat.pbc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Item Discrimination for Each Category of Categorical Variables — catPbc","text":"","code":"catPbc(datRaw, datRec, idRaw, idRec, context.vars = NULL, values, subunits, file.name = NULL, verbose = FALSE)"},{"path":"https://sachseka.github.io/eatPrep/reference/cat.pbc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Item Discrimination for Each Category of Categorical Variables — catPbc","text":"datRaw merged unrecoded dataset datRec dataset datRaw, recoded form idRaw Name column number identifier (ID) variable unrecoded dataset idRec Name column number identifier (ID) variable recoded dataset context.vars Names column numbers one context variables (e.g., sex, school). catPbc ignore variables. values Data frame information values, see inputList details. subunits Data frame information subunits, see inputList details. file.name Optional: Full path csv file results. verbose logical. TRUE additional diagnostics printed.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/cat.pbc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Item Discrimination for Each Category of Categorical Variables — catPbc","text":"column names datRaw datRec must consistent names provided columns subunit subunitRecoded data.frame subunits. Otherwise, catPbc fail.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/cat.pbc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Item Discrimination for Each Category of Categorical Variables — catPbc","text":"data frame discrimination values category categorical variables. data frame contains following columns: item Name unrecoded item cat Name category n Number responses item freq Absolute frequency category freq.rel Relative frequency category catPbc Discrimination value category (correlation total score) recodevalue Recode value category subunitType Type subunit, see inputList details","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/cat.pbc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Item Discrimination for Each Category of Categorical Variables — catPbc","text":"Nicole Haag","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/cat.pbc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Item Discrimination for Each Category of Categorical Variables — catPbc","text":"","code":"data(inputDat) data(inputList)  datRaw <- mergeData(newID = \"ID\", datList = inputDat, addMbd = TRUE) #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. #> Start adding mbd according to data pattern. datRec <- recodeData(datRaw, values = inputList$values,     subunits=inputList$subunits) pbcs   <- catPbc(datRaw, datRec, idRaw = \"ID\", idRec = \"ID\",     context.vars = \"hisei\", values = inputList$values,     subunits = inputList$subunits)"},{"path":"https://sachseka.github.io/eatPrep/reference/checkData.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Datasets for Missing Values and Invalid Codes — checkData","title":"Check Datasets for Missing Values and Invalid Codes — checkData","text":"Check data frames missing duplicated entries ID variable, persons /variables without valid codes, invalid codes. Invalid codes codes specified table values.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Datasets for Missing Values and Invalid Codes — checkData","text":"","code":"checkData(dat, datnam, values, subunits, units, ID = NULL, verbose = TRUE)"},{"path":"https://sachseka.github.io/eatPrep/reference/checkData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Datasets for Missing Values and Invalid Codes — checkData","text":"dat data frame checked. datnam Name data frame. Especially useful one data frame checked (e.g., list data frames). values data frame code information. See ‘Details’. subunits data frame subunit information. See ‘Details’. units data frame unit information. See ‘Details’. ID string ID column name. verbose Logical. FALSE information printed.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Datasets for Missing Values and Invalid Codes — checkData","text":"results checkData written console. Examples data frames values, subunits units can found via data(inputList).","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check Datasets for Missing Values and Invalid Codes — checkData","text":"Nicole Haag, Anna Lenski, Karoline Sachse","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Datasets for Deviations From Test Design — checkDesign","title":"Check Datasets for Deviations From Test Design — checkDesign","text":"function checks whether data frame corresponds particular rotated block design, .e. whether persons valid codes items presented one consistent missing code items presented .","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Datasets for Deviations From Test Design — checkDesign","text":"","code":"checkDesign(dat, booklets, blocks, rotation, sysMis=\"NA\", id=\"ID\",     subunits = NULL, verbose = TRUE)"},{"path":"https://sachseka.github.io/eatPrep/reference/checkDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Datasets for Deviations From Test Design — checkDesign","text":"dat data frame booklets data frame containing information number blocks booklet names blocks column names 'subunit', 'block', 'subunitBlockPosition'. See ‘Examples’. blocks data frame containing names subunits order within block column names 'booklet', 'block1', 'block2' ... etc. See ‘Examples’. rotation data frame containing information participant worked booklet column names [id specified ], 'booklet'. See ‘Examples’. sysMis character vector length 1 indicating missing code items administered participant. Default \"NA\". id character vector length 1 indicating name participant identifier variable dat. Default ID. subunits Optional: data frame subunit information (c.f. inputList). data frame used identify names recoded subunits. verbose logical. FALSE, information printed.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkDesign.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check Datasets for Deviations From Test Design — checkDesign","text":"Karoline Sachse, Philipp Franikowski","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Datasets for Deviations From Test Design — checkDesign","text":"","code":"data(inputDat) data(inputList)  prepDat <- automateDataPreparation (inputList = inputList, datList = inputDat,     readSpss = FALSE, checkData = FALSE, mergeData = TRUE, recodeData = TRUE,     aggregateData = FALSE, scoreData = FALSE, writeSpss = FALSE, verbose = TRUE) #> Starting automateDataPreparation 2025-02-19 15:54:17.553281 #>  #> Check has been skipped. #>  #> Start merging. #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. #> Start adding mbd according to data pattern. #>  #> Start recoding. #>  #> Found no recode information for variable(s):  #> ID, hisei.  #> This/These variable(s) will not be recoded. #>  #> Variables... I01, I02, I03, I04, I05, I06, I07, I08, I09, I10, I11, I12a, I12b, I12c, I13, I14, I15, I16, I17, I18, I19, I20, I21, I22, I23, I24, I25, I26, I27, I28 #> ...have been recoded. #>  #> RecodeMnr has been skipped. #>  #> Aggregate has been skipped. #>  #> Scoring has been skipped. #>  #> No SPSS-File has been written. #>  #> Missings are UNcollapsed. #> automateDataPreparation terminated successfully! 2025-02-19 15:54:17.669703  checkDesign(dat = prepDat, booklets = inputList$booklets, blocks = inputList$blocks,     rotation = inputList$rotation, sysMis = \"mbd\", id=\"ID\",     subunits = inputList$subunits, verbose = TRUE) #>  #> ── Check: Subunit recoding  #> ℹ Use names for recoded subunits. #>  #> ── Check: Variables in the dataset  #> ℹ The following 1 variable is not in info (`subunit` in blocks) but in dataset. #> It will be ignored during check: `hisei` #>  #> ── Check: Valid and missing codes  #> ✔ No deviations from design detected!  prepDat[1:7,\"I22R\"] <- \"1\" prepDat[1:4,c(\"I01R\",\"I02R\",\"I03R\")] <- \"mbd\"  checkDesign(dat = prepDat, booklets = inputList$booklets, blocks = inputList$blocks,     rotation = inputList$rotation, sysMis = \"mbd\", id=\"ID\",     subunits = inputList$subunits, verbose = TRUE) #>  #> ── Check: Subunit recoding  #> ℹ Use names for recoded subunits. #>  #> ── Check: Variables in the dataset  #> ℹ The following 1 variable is not in info (`subunit` in blocks) but in dataset. #> It will be ignored during check: `hisei` #>  #> ── Check: Valid and missing codes  #> ℹ Deviations from design detected! #> ✖ Found for 3 subunits sysMis instead of valid codes for booklet `booklet1`: #> I01R, I02R, and I03R #> ℹ I01R, I02R, I03R (4 cases): person100, person101, person102, person103 #> ✖ Found for 1 subunit valid codes instead of sysMis for booklet `booklet1`: #> I22R #> ℹ I22R (7 cases): person100, person101, person102, person103, person104, person105, person106"},{"path":"https://sachseka.github.io/eatPrep/reference/checkInputList.html","id":null,"dir":"Reference","previous_headings":"","what":"Check InputList structure for internal consistency — checkInputList","title":"Check InputList structure for internal consistency — checkInputList","text":"function checks whether inputList required form.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkInputList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check InputList structure for internal consistency — checkInputList","text":"","code":"checkInputList(inputList, mistypes = c(\"mnr\", \"mbd\", \"mir\", \"mbi\"))"},{"path":"https://sachseka.github.io/eatPrep/reference/checkInputList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check InputList structure for internal consistency — checkInputList","text":"inputList list. Following required structure inputLists eatPrep. mistypes Character vector. checked, whether missing types vector defined items.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkInputList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check InputList structure for internal consistency — checkInputList","text":"xlsx-file produced 'ZKDaemon' expected following sheets: “units”, “subunits”, “values”, “unitrecoding”, “sav-files”, “params”, “aggregate-missings”, “itemproperties”, “propertylabels”, “booklets”, “blocks”. readDaemonXlsx produce warning sheets missing wrongly specified.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkInputList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check InputList structure for internal consistency — checkInputList","text":"Logical. TRUE everything OK, FALSE otherwise.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkInputList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check InputList structure for internal consistency — checkInputList","text":"Karoline Sachse Philipp Franikowski","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/checkInputList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check InputList structure for internal consistency — checkInputList","text":"","code":"data(inputList) checkInputList(inputList) #>  #> ── Checking sheets  #>  #> ── Check: Value Recoding  #> ✔ Missing types `mir` and `mbi` are defined for all items in valueRecode. #> ✖ Missing type `mnr` is not defined as valueRecode for items: `I14`. #> ✖ Missing type `mbd` is not defined as valueRecode for items: `I14`. #> ℹ value contains the following values over all items: `0`, `1`, `2`, `3`, `4`, #> `5`, `6`, `7`, `8`, and `9` #> ✔ valueRecode contains only 0, 1, and the mistypes: `0`, `1`, `mbd`, `mbi`, #> `mir`, and `mnr` #>  #> ── Check: Value Types  #> ✔ No other values than `vc` and the mistypes in valueType. #>  #> ── Check: Unit Equivalence  #> ✔ All 28 units in units sheet are also defined in subunits. #>  #> ── Check: Subunit Equivalence  #> ✔ All 30 subunits in subunits sheet are also defined in values. #>  #> ── Check: Unit Recoding  #> ℹ Units with only one subunit: 27 #> ℹ Units with more than one subunit: 1 (`I12`) #> ✔ All units with more than one subunit are defined in unitRecodings sheet. #> [1] FALSE"},{"path":"https://sachseka.github.io/eatPrep/reference/collapseMissings.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Character Missings of Different Types to 0 or NA — collapseMissings","title":"Recode Character Missings of Different Types to 0 or NA — collapseMissings","text":"function used recode character missings datasets prepared using eatPrep package 0 NA. Additionally, variables converted numeric. called recode missing values prior passing datasets eatModel.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/collapseMissings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Character Missings of Different Types to 0 or NA — collapseMissings","text":"","code":"collapseMissings(dat, missing.rule = list(mvi = 0, mnr = 0, mci = NA, mbd = NA, mir = 0, mbi = 0), items = NULL, standard = TRUE)"},{"path":"https://sachseka.github.io/eatPrep/reference/collapseMissings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Character Missings of Different Types to 0 or NA — collapseMissings","text":"dat data frame containing character missings (e.g., mbd - missing design). See ‘Details’ supported character missing values. missing.rule named list definitions recode different types missings dataset. names correspond character missings list elements correspond recode values. items character vector containing column names data frame character missings recoded. standard Logical. Whether used eatPrep standard case (recoding 0 NA) .","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/collapseMissings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recode Character Missings of Different Types to 0 or NA — collapseMissings","text":"One main idea eatPrep package different types missing values remain distinguishable data preparation, thus allowing user flexibly recode different values IRT scaling process. collapseMissings facilitates recoding different types character missings IRT analysis exporting data software packages (e.g., SPSS). eatPrep package currently suggests six different types missings, namely mvi (text volume insufficient): used writing tasks person wrote little evaluate whether met specific criterion. mnr (missing reached): used whenever person reach respective task test booklet. consecutive missing values clustered end test session can coded mnr, e.g., function mnrCoding package eatPrep. mci (missing coding impossible): used whenever response coded due technical problems (e.g., problems digitalizing booklets) mbd (missing design): used whenever item administered specific person. mir (missing invalid response): used whenever person attempted answer item answer classified existing coding scheme. Can also used multiple choice-items respondent selected one option. mbi (missing intention): used whenever person expected answer item provide response. default recode values missing types : text volume insufficient = 0, missing reached = 0, missing coding impossible = NA, missing design = NA, missing invalid response = 0, missing intention = 0","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/collapseMissings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Character Missings of Different Types to 0 or NA — collapseMissings","text":"data frame missing values coded 0 NA according specification argument missing.rule.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/collapseMissings.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Recode Character Missings of Different Types to 0 or NA — collapseMissings","text":"OECD (2005). PISA 2003 Technical Report. OECD Publishing.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/collapseMissings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recode Character Missings of Different Types to 0 or NA — collapseMissings","text":"Nicole Mahler, Karoline Sachse, Martin Hecht","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/collapseMissings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Character Missings of Different Types to 0 or NA — collapseMissings","text":"","code":"data(inputDat) data(inputList)  dat1 <- inputDat[[1]]  # get first dataset from inputDat datRec <- recodeData(dat1, inputList$values, inputList$subunits, verbose = TRUE) #>  #> Found no recode information for variable(s):  #> ID, hisei.  #> This/These variable(s) will not be recoded. #>  #> Variables... I01, I02, I03, I04, I05, I06, I07, I08, I09, I10, I11, I12a, I12b, I12c, I13, I14, I15, I16, I17, I18, I19, I20, I21 #> ...have been recoded. str(datRec) #> 'data.frame':\t100 obs. of  25 variables: #>  $ ID   : chr  \"person100\" \"person101\" \"person102\" \"person103\" ... #>  $ hisei: chr  \"49\" NA \"57\" \"32\" ... #>  $ I01R : chr  \"0\" \"mbi\" \"1\" \"0\" ... #>  $ I02R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I03R : chr  \"0\" \"1\" \"1\" \"0\" ... #>  $ I04R : chr  \"1\" \"1\" \"0\" \"0\" ... #>  $ I05R : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I06R : chr  \"0\" \"mbi\" \"0\" \"1\" ... #>  $ I07R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I08R : chr  \"0\" \"1\" \"0\" \"0\" ... #>  $ I09R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I10R : chr  \"1\" \"0\" \"0\" \"0\" ... #>  $ I11R : chr  \"0\" \"0\" \"1\" \"0\" ... #>  $ I12aR: chr  \"1\" \"0\" \"1\" \"0\" ... #>  $ I12bR: chr  \"0\" \"mbi\" \"0\" \"1\" ... #>  $ I12cR: chr  \"1\" \"0\" \"0\" \"1\" ... #>  $ I13R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I14R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I15R : chr  \"mbi\" \"0\" \"mbi\" \"1\" ... #>  $ I16R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I17R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I18R : chr  \"mbi\" \"1\" \"mbi\" \"1\" ... #>  $ I19R : chr  \"mbi\" \"1\" \"mbi\" \"0\" ... #>  $ I20R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I21R : chr  \"mbi\" \"0\" \"mbi\" \"1\" ... datColMis <- collapseMissings(datRec) str(datColMis) #> 'data.frame':\t100 obs. of  25 variables: #>  $ ID   : chr  \"person100\" \"person101\" \"person102\" \"person103\" ... #>  $ hisei: chr  \"49\" NA \"57\" \"32\" ... #>  $ I01R : chr  \"0\" \"0\" \"1\" \"0\" ... #>  $ I02R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I03R : chr  \"0\" \"1\" \"1\" \"0\" ... #>  $ I04R : chr  \"1\" \"1\" \"0\" \"0\" ... #>  $ I05R : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I06R : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I07R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I08R : chr  \"0\" \"1\" \"0\" \"0\" ... #>  $ I09R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I10R : chr  \"1\" \"0\" \"0\" \"0\" ... #>  $ I11R : chr  \"0\" \"0\" \"1\" \"0\" ... #>  $ I12aR: chr  \"1\" \"0\" \"1\" \"0\" ... #>  $ I12bR: chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I12cR: chr  \"1\" \"0\" \"0\" \"1\" ... #>  $ I13R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I14R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I15R : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I16R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I17R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I18R : chr  \"0\" \"1\" \"0\" \"1\" ... #>  $ I19R : chr  \"0\" \"1\" \"0\" \"0\" ... #>  $ I20R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I21R : chr  \"0\" \"0\" \"0\" \"1\" ..."},{"path":"https://sachseka.github.io/eatPrep/reference/evalPbc.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate discrimination statistics — evalPbc","title":"Evaluate discrimination statistics — evalPbc","text":"function evaluates discrimination statistics categories categorical variables, .e. correlations category total score test..","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/evalPbc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate discrimination statistics — evalPbc","text":"","code":"evalPbc(pbcs, mistypes = c(\"mnr\", \"mbd\", \"mir\", \"mbi\"),                     minPbcAtt = .05, maxPbcDis = .005, maxPbcMis = .07)"},{"path":"https://sachseka.github.io/eatPrep/reference/evalPbc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate discrimination statistics — evalPbc","text":"pbcs data frame discrimination values category categorical variables: output catPbc. data frame contains following columns: item, cat, n, freq, freq.rel, catPbc, recodevalue, subunitType. mistypes Character numeric vector. checked, whether missing types vector defined items. minPbcAtt Numeric. Minimum correlation attractors total test score. lower, attractor flagged. maxPbcDis Numeric. Maximum correlation distractors total test score. higher, respective distractor flagged. maxPbcMis Numeric. Maximum correlation missing total test score. higher, respective missing type flagged.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/evalPbc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate discrimination statistics — evalPbc","text":"List. NULL (empty list) everything OK. Otherwise, returns list character vectors containing names flagged items: zeroFreqAtt Items attractor frequency zero. zeroFreqDis Items distractor frequencies zero. lowMisPbcAtt Items low (lower minPbcAtt) missing attractor correlations. highPbcDis Items high (higher maxPbcDis) distractor correlations. highPbcMis Items high (higher maxPbcMis) missing type correlations.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/evalPbc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Evaluate discrimination statistics — evalPbc","text":"Karoline Sachse, Philipp Franikowski","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/evalPbc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate discrimination statistics — evalPbc","text":"","code":"data(inputDat) data(inputList)  datRaw <- mergeData(newID = \"ID\", datList = inputDat, addMbd = TRUE) #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. #> Start adding mbd according to data pattern. datRec <- recodeData(datRaw, values = inputList$values,     subunits=inputList$subunits) pbcs   <- catPbc(datRaw, datRec, idRaw = \"ID\", idRec = \"ID\",     context.vars = \"hisei\", values = inputList$values,     subunits = inputList$subunits) evalPbc(pbcs) #> ✖ The attractors (score 1) of the following 1 item were chosen with a frequency #> of zero: I14. This should not happen. Please check. #> ! The distractors (score 0) of the following 1 item were chosen with a #> frequency of zero: I14_7. This may happen, but is probably not intended. #> ✖ catPbcs for attractors (score 1) of the following 3 items are worrisome low (< 0.05) or missing: I12c:_0.01, I14:_NA, and I24:_-0.12 #> ✖ catPbcs for distractors (score 0) of the following 9 items are unexpectedly high (> 0.005): I02_4_0.11, I07_3_0.26, I07_4_0.03, I12c_3_0.03, I13_4_0.01, I14_4_0.06, I14_5_0.04, I15_3_0.03, I17_1_0.06, I17_3_0.04, I22_3_0.13, and I24_1_0.21 #> ! catPbcs for mistype 'mir' of the following 3 items are relatively high (> #> 0.07): I01_8_0.27, I03_8_0.29, and I16_8_0.08 #> ! catPbcs for mistype 'mbi' of the following 8 items are relatively high (> #> 0.07): I01_9_0.11, I02_9_0.15, I16_9_0.14, I17_9_0.16, I18_9_0.19, I20_9_0.14, #> I21_9_0.15, and I23_9_0.17 #> ℹ For a list of problematic items, save the `output` of this function and #> return the item names as a vector: #> • `output$zeroFreqAtt` #> • `output$zeroFreqDis` #> • `output$lowMisPbcAtt` #> • `output$highPbcDis` #> • `output$highPbcMis$mir` #> • `output$highPbcMis$mbi`"},{"path":"https://sachseka.github.io/eatPrep/reference/inputDat.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Three Datasets from Educational Assessment — inputDat","title":"List of Three Datasets from Educational Assessment — inputDat","text":"Simulated data three booklets educational assessment study.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/inputDat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Three Datasets from Educational Assessment — inputDat","text":"","code":"data(inputDat)"},{"path":"https://sachseka.github.io/eatPrep/reference/inputDat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of Three Datasets from Educational Assessment — inputDat","text":"list contains 3 data frames, following columns: ID Person-ID Hisei continuous covariate. Ixx Item responses selection 30 test items.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/inputDat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of Three Datasets from Educational Assessment — inputDat","text":"code, subunit unit descriptions stored dataset inputList.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/inputDat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Three Datasets from Educational Assessment — inputDat","text":"","code":"data(inputDat) str(inputDat) #> List of 3 #>  $ booklet1:'data.frame':\t100 obs. of  25 variables: #>   ..$ ID   : chr [1:100] \"person100\" \"person101\" \"person102\" \"person103\" ... #>   ..$ hisei: num [1:100] 49 NA 57 32 59 56 55 47 NA 50 ... #>   ..$ I01  : chr [1:100] \"1\" \"9\" \"3\" \"2\" ... #>   ..$ I02  : chr [1:100] \"4\" \"4\" \"4\" \"4\" ... #>   ..$ I03  : chr [1:100] \"1\" \"2\" \"2\" \"3\" ... #>   ..$ I04  : chr [1:100] \"2\" \"2\" \"3\" \"1\" ... #>   ..$ I05  : chr [1:100] \"0\" \"0\" \"0\" \"1\" ... #>   ..$ I06  : chr [1:100] \"0\" \"9\" \"0\" \"1\" ... #>   ..$ I07  : chr [1:100] \"2\" \"2\" \"2\" \"3\" ... #>   ..$ I08  : chr [1:100] \"0\" \"1\" \"0\" \"0\" ... #>   ..$ I09  : chr [1:100] \"2\" \"2\" \"2\" \"3\" ... #>   ..$ I10  : chr [1:100] \"2\" \"1\" \"1\" \"4\" ... #>   ..$ I11  : chr [1:100] \"4\" \"1\" \"3\" \"2\" ... #>   ..$ I12a : chr [1:100] \"1\" \"0\" \"1\" \"0\" ... #>   ..$ I12b : chr [1:100] \"0\" \"9\" \"0\" \"1\" ... #>   ..$ I12c : chr [1:100] \"4\" \"1\" \"2\" \"4\" ... #>   ..$ I13  : chr [1:100] \"9\" \"4\" \"9\" \"4\" ... #>   ..$ I14  : chr [1:100] \"9\" \"4\" \"9\" \"1\" ... #>   ..$ I15  : chr [1:100] \"9\" \"3\" \"9\" \"1\" ... #>   ..$ I16  : chr [1:100] \"9\" \"2\" \"9\" \"2\" ... #>   ..$ I17  : chr [1:100] \"9\" \"3\" \"9\" \"4\" ... #>   ..$ I18  : chr [1:100] \"9\" \"1\" \"9\" \"1\" ... #>   ..$ I19  : chr [1:100] \"9\" \"4\" \"9\" \"2\" ... #>   ..$ I20  : chr [1:100] \"9\" \"1\" \"9\" \"1\" ... #>   ..$ I21  : chr [1:100] \"9\" \"2\" \"9\" \"3\" ... #>  $ booklet2:'data.frame':\t100 obs. of  25 variables: #>   ..$ ID   : chr [1:100] \"person200\" \"person201\" \"person202\" \"person203\" ... #>   ..$ hisei: num [1:100] 69 76 47 58 62 78 70 26 57 70 ... #>   ..$ I08  : chr [1:100] \"0\" \"0\" \"1\" \"0\" ... #>   ..$ I09  : chr [1:100] \"2\" \"4\" \"1\" \"2\" ... #>   ..$ I10  : chr [1:100] \"3\" \"1\" \"2\" \"2\" ... #>   ..$ I11  : chr [1:100] \"4\" \"2\" \"1\" \"4\" ... #>   ..$ I12a : chr [1:100] \"1\" \"0\" \"1\" \"1\" ... #>   ..$ I12b : chr [1:100] \"1\" \"0\" \"1\" \"1\" ... #>   ..$ I12c : chr [1:100] \"4\" \"3\" \"2\" \"2\" ... #>   ..$ I13  : chr [1:100] \"4\" \"2\" \"1\" \"2\" ... #>   ..$ I14  : chr [1:100] \"3\" \"4\" \"2\" \"3\" ... #>   ..$ I15  : chr [1:100] \"4\" \"1\" \"4\" \"4\" ... #>   ..$ I16  : chr [1:100] \"4\" \"3\" \"3\" \"2\" ... #>   ..$ I17  : chr [1:100] \"4\" \"1\" \"2\" \"3\" ... #>   ..$ I18  : chr [1:100] \"1\" \"4\" \"3\" \"2\" ... #>   ..$ I19  : chr [1:100] \"2\" \"1\" \"4\" \"3\" ... #>   ..$ I20  : chr [1:100] \"4\" \"9\" \"2\" \"2\" ... #>   ..$ I21  : chr [1:100] \"2\" \"9\" \"2\" \"1\" ... #>   ..$ I22  : chr [1:100] \"1\" \"9\" \"2\" \"1\" ... #>   ..$ I23  : chr [1:100] \"9\" \"9\" \"2\" \"3\" ... #>   ..$ I24  : chr [1:100] \"1\" \"9\" \"3\" \"3\" ... #>   ..$ I25  : chr [1:100] \"1\" \"9\" \"0\" \"0\" ... #>   ..$ I26  : chr [1:100] \"9\" \"9\" \"1\" \"0\" ... #>   ..$ I27  : chr [1:100] \"0\" \"9\" \"1\" \"0\" ... #>   ..$ I28  : chr [1:100] \"1\" \"9\" \"1\" \"0\" ... #>  $ booklet3:'data.frame':\t100 obs. of  23 variables: #>   ..$ ID   : chr [1:100] \"person300\" \"person301\" \"person302\" \"person303\" ... #>   ..$ hisei: num [1:100] 49 NA 57 32 59 56 55 47 NA 50 ... #>   ..$ I01  : chr [1:100] \"2\" \"3\" \"2\" \"1\" ... #>   ..$ I02  : chr [1:100] \"4\" \"3\" \"3\" \"3\" ... #>   ..$ I03  : chr [1:100] \"3\" \"1\" \"1\" \"1\" ... #>   ..$ I04  : chr [1:100] \"1\" \"3\" \"1\" \"1\" ... #>   ..$ I05  : chr [1:100] \"0\" \"1\" \"1\" \"0\" ... #>   ..$ I06  : chr [1:100] \"9\" \"1\" \"0\" \"1\" ... #>   ..$ I07  : chr [1:100] \"8\" \"2\" \"2\" \"1\" ... #>   ..$ I15  : chr [1:100] \"3\" \"9\" \"9\" \"9\" ... #>   ..$ I16  : chr [1:100] \"1\" \"3\" \"3\" \"3\" ... #>   ..$ I17  : chr [1:100] \"4\" \"4\" \"4\" \"4\" ... #>   ..$ I18  : chr [1:100] \"4\" \"4\" \"4\" \"4\" ... #>   ..$ I19  : chr [1:100] \"2\" \"9\" \"9\" \"9\" ... #>   ..$ I20  : chr [1:100] \"3\" \"4\" \"2\" \"4\" ... #>   ..$ I21  : chr [1:100] \"3\" \"2\" \"2\" \"2\" ... #>   ..$ I22  : chr [1:100] \"3\" \"4\" \"4\" \"9\" ... #>   ..$ I23  : chr [1:100] \"3\" \"1\" \"1\" \"9\" ... #>   ..$ I24  : chr [1:100] \"1\" \"1\" \"1\" \"9\" ... #>   ..$ I25  : chr [1:100] \"0\" \"1\" \"9\" \"9\" ... #>   ..$ I26  : chr [1:100] \"1\" \"0\" \"9\" \"9\" ... #>   ..$ I27  : chr [1:100] \"0\" \"9\" \"9\" \"9\" ... #>   ..$ I28  : chr [1:100] \"0\" \"9\" \"9\" \"9\" ..."},{"path":"https://sachseka.github.io/eatPrep/reference/inputList.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Frames with Code, Subunit and Unit Information for Datasets in inputDat — inputList","title":"Data Frames with Code, Subunit and Unit Information for Datasets in inputDat — inputList","text":"data frames contain information codes, subunits units datasets inputDat necessary inputs e.g. automateDataPreparation, checkData, recodeData, aggregateData scoreData.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/inputList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Frames with Code, Subunit and Unit Information for Datasets in inputDat — inputList","text":"","code":"data(inputList)"},{"path":"https://sachseka.github.io/eatPrep/reference/inputList.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Frames with Code, Subunit and Unit Information for Datasets in inputDat — inputList","text":"list three data frames: units: Unit information, contains following columns:  unit Unit name. unitType Subunit types:         ID = ID variable;         TI = test item;         CV = context variable. unitLabel Unit label, used writeSpss. unitDescription Unit description. unitAggregateRule Aggregate rule unit:         SUM; MEAN. unitScoreRule currently use subunits: Subunit information, contains following columns:  unit Unit name, subunits given. subunit Subunit name. subunitType Subunit types:C1 = multiple choice; C2 = short answer; C3 = constructed response; T = transcript. subunitLabel Subunit label, used writeSpss. subunitDescription Subunit descriptions. subunitPosition Subunit position test booklet (e.g., line 1). subunitTransniveau Subunit transformation level. subunitRecoded Name recoded subunit. subunitLabelRecoded Label recoded subunit, used writeSpss applied dataset                                 produced recodeData. values: Value information, contains following columns: subunit Subunit name, values given. value Valid values respective subunit. valueRecode Recode values respective value. valueType Value types: \t\tvc = valid code; \t\tmbd = missing – design; \t\tmvi = missing – volume insufficient; \t\tmnr = missing – reached; \t\tmci = missing – coding impossible; \t\tmbi = missing – intention. valueLabel Value labels, used writeSpss. valueDescription Value descriptions. valueLabelRecoded Labels recoded values, used writeSpss applied dataset \t\t\t\t\t\t\t\tproduced recodeData. valueDescriptionRecoded Descriptions recoded values. unitRecodings: Unit recoding information, contains following columns:  unit Unit name value Valid values respective unit. valueRecode Recode values respective value. valueType Value types: \t\t  vc = valid code; \t\t  mbd = missing – design; \t\t  mvi = missing – volume insufficient; \t\t  mnr = missing – reached; \t\t  mci = missing – coding impossible; \t\t  mbi = missing – intention. valueLabel Value labels, used writeSpss. valueDescription Value descriptions. valueLabelRecoded Labels recoded values, used writeSpss applied dataset \t\t\t\t\t\t\t\tproduced recodeData. savFiles: information readSpss, contains following columns:  filename SPSS filenames case.id ID variable respective dataset, used mergeData newID: information mergeData, contains following columns:  key one entries master-id value corresponding value; ID variable final dataset shall named aggrMiss: missing aggregation pattern aggregateData blocks: missing aggregation pattern aggregateData subunit Subunit name. block Block name. subunitBlockPosition subunit's position corresponding block. booklets: Design booklet Booklet name. block1 ... blockX Block names booklet. rotation: Assignment IDs booklets ID Case identifier. booklet Booklet name.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/inputList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Frames with Code, Subunit and Unit Information for Datasets in inputDat — inputList","text":"","code":"data(inputList) str(inputList) #> List of 10 #>  $ units        :'data.frame':\t29 obs. of  6 variables: #>   ..$ unit             : chr [1:29] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ unitLabel        : chr [1:29] \"Animals: Weight of a duck\" \"Animals: Weight of a horse\" \"Animals: Weight of a mouse\" \"Animals: Weight of a cat\" ... #>   ..$ unitDescription  : chr [1:29] \"\" \"\" \"\" \"\" ... #>   ..$ unitType         : chr [1:29] \"TI\" \"TI\" \"TI\" \"TI\" ... #>   ..$ unitAggregateRule: chr [1:29] \"\" \"\" \"\" \"\" ... #>   ..$ unitScoreRule    : chr [1:29] \"\" \"\" \"\" \"\" ... #>  $ subunits     :'data.frame':\t30 obs. of  9 variables: #>   ..$ unit               : chr [1:30] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ subunit            : chr [1:30] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ subunitType        : chr [1:30] \"1\" \"1\" \"1\" \"1\" ... #>   ..$ subunitLabel       : chr [1:30] \"Animals: Weight of a duck\" \"Animals: Weight of a horse\" \"Animals: Weight of a mouse\" \"Animals: Weight of a cat\" ... #>   ..$ subunitDescription : chr [1:30] \"\" \"\" \"\" \"\" ... #>   ..$ subunitPosition    : chr [1:30] \"a)\" \"b)\" \"c)\" \"d)\" ... #>   ..$ subunitTransniveau : chr [1:30] \"\" \"\" \"\" \"\" ... #>   ..$ subunitRecoded     : chr [1:30] \"I01R\" \"I02R\" \"I03R\" \"I04R\" ... #>   ..$ subunitLabelRecoded: chr [1:30] \"Recoded Animals: Weight of a duck\" \"Recoded Animals: Weight of a horse\" \"Recoded Animals: Weight of a mouse\" \"Recoded Animals: Weight of a cat\" ... #>  $ values       :'data.frame':\t220 obs. of  8 variables: #>   ..$ subunit                : chr [1:220] \"I01\" \"I01\" \"I01\" \"I01\" ... #>   ..$ value                  : chr [1:220] \"1\" \"2\" \"3\" \"6\" ... #>   ..$ valueRecode            : chr [1:220] \"0\" \"0\" \"1\" \"mnr\" ... #>   ..$ valueType              : chr [1:220] \"vc\" \"vc\" \"vc\" \"mnr\" ... #>   ..$ valueLabel             : chr [1:220] \"Response option 1 marked\" \"Response option 2 marked\" \"Response option 3 marked\" \"missing not reached\" ... #>   ..$ valueDescription       : chr [1:220] \"Response option 1 marked\" \"Response option 2 marked\" \"Response option 3 marked\" \"missing not reached\" ... #>   ..$ valueLabelRecoded      : chr [1:220] \"0\" \"0\" \"1\" \"mnr\" ... #>   ..$ valueDescriptionRecoded: chr [1:220] \"\" \"\" \"\" \"\" ... #>  $ unitRecodings:'data.frame':\t7 obs. of  7 variables: #>   ..$ unit             : chr [1:7] \"I12\" \"I12\" \"I12\" \"I12\" ... #>   ..$ value            : chr [1:7] \"0\" \"1\" \"2\" \"3\" ... #>   ..$ valueRecode      : chr [1:7] \"0\" \"0\" \"0\" \"1\" ... #>   ..$ valueType        : chr [1:7] \"vc\" \"vc\" \"vc\" \"vc\" ... #>   ..$ valueLabel       : chr [1:7] \"\" \"\" \"\" \"\" ... #>   ..$ valueDescription : chr [1:7] \"\" \"\" \"\" \"\" ... #>   ..$ valueLabelRecoded: chr [1:7] \"\" \"\" \"\" \"\" ... #>  $ savFiles     :'data.frame':\t3 obs. of  3 variables: #>   ..$ filename: chr [1:3] \"booklet1.sav\" \"booklet2.sav\" \"booklet3.sav\" #>   ..$ case.id : chr [1:3] \"ID\" \"ID\" \"ID\" #>   ..$ fullname: chr [1:3] \"\" \"\" \"\" #>  $ newID        :'data.frame':\t1 obs. of  2 variables: #>   ..$ key  : chr \"master-id\" #>   ..$ value: chr \"ID\" #>  $ aggrMiss     :'data.frame':\t7 obs. of  8 variables: #>   ..$ c..vc....mvi....mnr....mci....mbd....mir....mbi..: chr [1:7] \"vc\" \"mvi\" \"mnr\" \"mci\" ... #>   ..$ vc                                               : chr [1:7] \"vc\" \"mvi\" \"vc\" \"mci\" ... #>   ..$ mbd                                              : chr [1:7] \"err\" \"err\" \"err\" \"err\" ... #>   ..$ mvi                                              : chr [1:7] \"mvi\" \"mvi\" \"err\" \"mci\" ... #>   ..$ mnr                                              : chr [1:7] \"vc\" \"err\" \"mnr\" \"mci\" ... #>   ..$ mci                                              : chr [1:7] \"mci\" \"mci\" \"mci\" \"mci\" ... #>   ..$ mir                                              : chr [1:7] \"vc\" \"err\" \"mir\" \"mci\" ... #>   ..$ mbi                                              : chr [1:7] \"vc\" \"err\" \"mnr\" \"mci\" ... #>  $ blocks       :'data.frame':\t30 obs. of  3 variables: #>   ..$ subunit             : chr [1:30] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ block               : chr [1:30] \"bl1\" \"bl1\" \"bl1\" \"bl1\" ... #>   ..$ subunitBlockPosition: num [1:30] 1 2 3 4 5 6 7 1 2 3 ... #>  $ booklets     :'data.frame':\t3 obs. of  4 variables: #>   ..$ booklet: chr [1:3] \"booklet1\" \"booklet2\" \"booklet3\" #>   ..$ block1 : chr [1:3] \"bl1\" \"bl4\" \"bl3\" #>   ..$ block2 : chr [1:3] \"bl2\" \"bl3\" \"bl1\" #>   ..$ block3 : chr [1:3] \"bl3\" \"bl2\" \"bl4\" #>  $ rotation     :'data.frame':\t300 obs. of  2 variables: #>   ..$ ID     : chr [1:300] \"person100\" \"person101\" \"person102\" \"person103\" ... #>   ..$ booklet: chr [1:300] \"booklet1\" \"booklet1\" \"booklet1\" \"booklet1\" ..."},{"path":"https://sachseka.github.io/eatPrep/reference/inputMinimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Frames with Code, Subunit and Unit Information for Datasets in inputDat — inputMinimal","title":"Data Frames with Code, Subunit and Unit Information for Datasets in inputDat — inputMinimal","text":"data frames contain information codes, subunits units datasets inputDat necessary inputs e.g. automateDataPreparation, checkData, recodeData, aggregateData scoreData.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/inputMinimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Frames with Code, Subunit and Unit Information for Datasets in inputDat — inputMinimal","text":"","code":"data(inputList)"},{"path":"https://sachseka.github.io/eatPrep/reference/inputMinimal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Frames with Code, Subunit and Unit Information for Datasets in inputDat — inputMinimal","text":"list several data frames: units: Unit information, contains following columns:  unit Unit name. unitAggregateRule Aggregate rule unit:         SUM; MEAN. subunits: Subunit information, contains following columns:  unit Unit name, subunits given. subunit Subunit name. subunitRecoded Name recoded subunit. values: Value information, contains following columns: subunit Subunit name, values given. value Valid values respective subunit. valueRecode Recode values respective value. valueType Value types: \t\tvc = valid code; \t\tmbd = missing – design; \t\tmvi = missing – volume insufficient; \t\tmnr = missing – reached; \t\tmci = missing – coding impossible; \t\tmbi = missing – intention. unitRecodings: Unit recoding information, contains following columns:  unit Unit name value Valid values respective unit. valueRecode Recode values respective value. valueType Value types: \t\t  vc = valid code; \t\t  mbd = missing – design; \t\t  mvi = missing – volume insufficient; \t\t  mnr = missing – reached; \t\t  mci = missing – coding impossible; \t\t  mbi = missing – intention. blocks: missing aggregation pattern aggregateData subunit Subunit name. block Block name. subunitBlockPosition subunit's position corresponding block. booklets: Design booklet Booklet name. block1 ... blockX Block names booklet. rotation: Assignment IDs booklets ID Case identifier. booklet Booklet name.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/inputMinimal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Frames with Code, Subunit and Unit Information for Datasets in inputDat — inputMinimal","text":"","code":"data(inputMinimal) str(inputMinimal) #> List of 7 #>  $ units        :'data.frame':\t28 obs. of  2 variables: #>   ..$ unit             : chr [1:28] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ unitAggregateRule: chr [1:28] \"\" \"\" \"\" \"\" ... #>  $ subunits     :'data.frame':\t30 obs. of  3 variables: #>   ..$ unit          : chr [1:30] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ subunit       : chr [1:30] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ subunitRecoded: chr [1:30] \"I01R\" \"I02R\" \"I03R\" \"I04R\" ... #>  $ values       :'data.frame':\t220 obs. of  4 variables: #>   ..$ subunit    : chr [1:220] \"I01\" \"I01\" \"I01\" \"I01\" ... #>   ..$ value      : chr [1:220] \"1\" \"2\" \"3\" \"6\" ... #>   ..$ valueRecode: chr [1:220] \"0\" \"0\" \"1\" \"mnr\" ... #>   ..$ valueType  : chr [1:220] \"vc\" \"vc\" \"vc\" \"mnr\" ... #>  $ unitRecodings:'data.frame':\t7 obs. of  4 variables: #>   ..$ unit       : chr [1:7] \"I12\" \"I12\" \"I12\" \"I12\" ... #>   ..$ value      : chr [1:7] \"0\" \"1\" \"2\" \"3\" ... #>   ..$ valueRecode: chr [1:7] \"0\" \"0\" \"0\" \"1\" ... #>   ..$ valueType  : chr [1:7] \"vc\" \"vc\" \"vc\" \"vc\" ... #>  $ blocks       :'data.frame':\t30 obs. of  3 variables: #>   ..$ subunit             : chr [1:30] \"I01\" \"I02\" \"I03\" \"I04\" ... #>   ..$ block               : chr [1:30] \"bl1\" \"bl1\" \"bl1\" \"bl1\" ... #>   ..$ subunitBlockPosition: num [1:30] 1 2 3 4 5 6 7 1 2 3 ... #>  $ booklets     :'data.frame':\t3 obs. of  4 variables: #>   ..$ booklet: chr [1:3] \"booklet1\" \"booklet2\" \"booklet3\" #>   ..$ block1 : chr [1:3] \"bl1\" \"bl4\" \"bl3\" #>   ..$ block2 : chr [1:3] \"bl2\" \"bl3\" \"bl1\" #>   ..$ block3 : chr [1:3] \"bl3\" \"bl2\" \"bl4\" #>  $ rotation     :'data.frame':\t300 obs. of  2 variables: #>   ..$ ID     : chr [1:300] \"person100\" \"person101\" \"person102\" \"person103\" ... #>   ..$ booklet: chr [1:300] \"booklet1\" \"booklet1\" \"booklet1\" \"booklet1\" ..."},{"path":"https://sachseka.github.io/eatPrep/reference/make.pseudo.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform ratings from real raters into pseudo ratings — make.pseudo","title":"Transform ratings from real raters into pseudo ratings — make.pseudo","text":"Data large-scale assessments often rated multiple raters. function reduces number raters use “pseudo raters”.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/make.pseudo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform ratings from real raters into pseudo ratings — make.pseudo","text":"","code":"make.pseudo (datLong, idCol, varCol, codCol, valueCol, n.pseudo, randomize.order = TRUE,              verbose = FALSE)"},{"path":"https://sachseka.github.io/eatPrep/reference/make.pseudo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform ratings from real raters into pseudo ratings — make.pseudo","text":"datLong Data set longformat, .e. one row per examinee-variable-rater combination. idCol Name column number person identifier (ID) variable. varCol Name column number variable identifier. codCol Name column number rater identifier variable. valueCol Name column number value variable. n.pseudo many pseudo rater used? (value must lower number real raters) randomize.order Logical: TRUE, selection raters pseudo raters random. verbose Logical: give information number persons, variables, raters?","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/make.pseudo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform ratings from real raters into pseudo ratings — make.pseudo","text":"data.frame long format.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/make.pseudo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform ratings from real raters into pseudo ratings — make.pseudo","text":"Sebastian Weirich","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/make.pseudo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform ratings from real raters into pseudo ratings — make.pseudo","text":"","code":"data(rater) oneRater <- make.pseudo (datLong=rater, idCol=\"id\", varCol=\"variable\", codCol=\"rater\",             valueCol=\"value\", n.pseudo=1) twoRaters<- make.pseudo (datLong=rater, idCol=\"id\", varCol=\"variable\", codCol=\"rater\",             valueCol=\"value\", n.pseudo=2)"},{"path":"https://sachseka.github.io/eatPrep/reference/meanAgree.html","id":null,"dir":"Reference","previous_headings":"","what":"mean agreement among several raters — meanAgree","title":"mean agreement among several raters — meanAgree","text":"wrapper agree function irr package. Function computes mean agreement among several raters (least 2) one item several persons.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/meanAgree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mean agreement among several raters — meanAgree","text":"","code":"meanAgree( dat , tolerance = 0 , weight.mean = TRUE )"},{"path":"https://sachseka.github.io/eatPrep/reference/meanAgree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mean agreement among several raters — meanAgree","text":"dat Data frame least two columns, examinees rows raters columns. tolerance number successive rating categories regarded rater agreement (see help file agree function). weight.mean Logical: TRUE, agreement weighted number rater subjects. FALSE, averaged among rater pairs.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/meanAgree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mean agreement among several raters — meanAgree","text":"list. First element data frame proportional agreement raters pairs. Second element scalar mean agreement among raters.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/meanAgree.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mean agreement among several raters — meanAgree","text":"Alexander Robitzsch","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/meanAgree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mean agreement among several raters — meanAgree","text":"","code":"data(rater) v01 <- subset(rater, variable == \"V01\") dat <- reshape2::dcast( v01, id~rater, value.var = \"value\") agr <- meanAgree(dat[,-1])"},{"path":"https://sachseka.github.io/eatPrep/reference/meanKappa.html","id":null,"dir":"Reference","previous_headings":"","what":"Cohens kappa and Brennan/Predigers kappa among several raters — meanKappa","title":"Cohens kappa and Brennan/Predigers kappa among several raters — meanKappa","text":"wrapper kappa2 bp.coeff.raw function. Computes Cohens kappa among several raters (least 2) one item several persons.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/meanKappa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohens kappa and Brennan/Predigers kappa among several raters — meanKappa","text":"","code":"meanKappa( dat , type = c(\"Cohen\", \"BrennanPrediger\"), weight = \"unweighted\" ,            weight.mean = TRUE )"},{"path":"https://sachseka.github.io/eatPrep/reference/meanKappa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohens kappa and Brennan/Predigers kappa among several raters — meanKappa","text":"dat Data frame least two columns, examinees rows raters columns. type type kappa computed? \"Cohen\", kappa2 called, \"BrennanPrediger\", bp.coeff.raw called. weight either character string specifying one predefined set weights numeric vector weights. type = \"Cohen\", weight can \"unweighted\", \"equal\", \"squared\". type = \"BrennanPrediger\", weight can \"quadratic\", \"linear\", \"ordinal\", \"radical\", \"ratio\", \"circular\", \"bipolar\", \"unweighted\". weight.mean Logical: TRUE, agreement weighted number rater subjects. FALSE, averaged among rater pairs.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/meanKappa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cohens kappa and Brennan/Predigers kappa among several raters — meanKappa","text":"list. First element data frame kappa values raters pairs. Second element scalar mean kappa among raters.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/meanKappa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cohens kappa and Brennan/Predigers kappa among several raters — meanKappa","text":"Brennan, R.L., Prediger, D. J. (1981). “Coefficient Kappa: uses, misuses, alternatives.\" Educational Psychological Measurement, 41, 687-699. Cohen, J. (1960). coefficient agreement nominal scales. Educational Psychological Measurement, 20, 37-46. Cohen, J. (1968). Weighted kappa: Nominal scale agreement provision scaled disagreement partial credit. Psychological Bulletin, 70, 213-220. Fleiss, J.L., Cohen, J., & Everitt, B.S. (1969). Large sample standard errors kappa weighted kappa. Psychological Bulletin, 72, 323-327.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/meanKappa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cohens kappa and Brennan/Predigers kappa among several raters — meanKappa","text":"","code":"data(rater) v01 <- subset(rater, variable == \"V01\") dat <- reshape2::dcast( v01, id~rater, value.var = \"value\") kap <- meanKappa(dat[,-1]) kap2<- meanKappa(dat[,-1], type=\"Brennan\")"},{"path":"https://sachseka.github.io/eatPrep/reference/mergeData.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Many Data Frames, Check For Inconsistencies, and Replace NA Values — mergeData","title":"Merge Many Data Frames, Check For Inconsistencies, and Replace NA Values — mergeData","text":"function merges list data frames. , provides detailed diagnostics value mismatches. two identically named columns two datasets identical values, NAs replaced valid codes stemming dataset(s) two different valid values found, first value kept dropped, user informed mismatch. Additionally, NA resulting merge (e.g., repeated block designs) can replaced customed character missing facilitate future data preparation merged dataset. See collapseMissings details supported character missings functions eatPrep package.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/mergeData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Many Data Frames, Check For Inconsistencies, and Replace NA Values — mergeData","text":"","code":"mergeData(newID, datList, oldIDs = NULL, addMbd = FALSE,                   overwriteMbdSilently=TRUE, verbose = TRUE)"},{"path":"https://sachseka.github.io/eatPrep/reference/mergeData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Many Data Frames, Check For Inconsistencies, and Replace NA Values — mergeData","text":"newID character vector length 1 indicating name identifier variable (ID) merged dataset /name ID every data.frame datList, specified differently oldIDs. datList list data frames merged oldIDs character vector numeric vector containing either names identifier variables datList column number data frame datList. Default vector containing length(datList) replicates value newID. addMbd logical. TRUE, NA replaced \"mbd\" (missing design) merged dataset. overwriteMbdSilently Logical. Whether mbd overwritten silently non-empty values available. verbose logical. TRUE, progress printed.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/mergeData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Many Data Frames, Check For Inconsistencies, and Replace NA Values — mergeData","text":"data frame containing unique cases unique variables. cases variables original datasets kept matched.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/mergeData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Merge Many Data Frames, Check For Inconsistencies, and Replace NA Values — mergeData","text":"Karoline Sachse","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/mergeData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Many Data Frames, Check For Inconsistencies, and Replace NA Values — mergeData","text":"","code":"data(inputDat) str(inputDat) #> List of 3 #>  $ booklet1:'data.frame':\t100 obs. of  25 variables: #>   ..$ ID   : chr [1:100] \"person100\" \"person101\" \"person102\" \"person103\" ... #>   ..$ hisei: num [1:100] 49 NA 57 32 59 56 55 47 NA 50 ... #>   ..$ I01  : chr [1:100] \"1\" \"9\" \"3\" \"2\" ... #>   ..$ I02  : chr [1:100] \"4\" \"4\" \"4\" \"4\" ... #>   ..$ I03  : chr [1:100] \"1\" \"2\" \"2\" \"3\" ... #>   ..$ I04  : chr [1:100] \"2\" \"2\" \"3\" \"1\" ... #>   ..$ I05  : chr [1:100] \"0\" \"0\" \"0\" \"1\" ... #>   ..$ I06  : chr [1:100] \"0\" \"9\" \"0\" \"1\" ... #>   ..$ I07  : chr [1:100] \"2\" \"2\" \"2\" \"3\" ... #>   ..$ I08  : chr [1:100] \"0\" \"1\" \"0\" \"0\" ... #>   ..$ I09  : chr [1:100] \"2\" \"2\" \"2\" \"3\" ... #>   ..$ I10  : chr [1:100] \"2\" \"1\" \"1\" \"4\" ... #>   ..$ I11  : chr [1:100] \"4\" \"1\" \"3\" \"2\" ... #>   ..$ I12a : chr [1:100] \"1\" \"0\" \"1\" \"0\" ... #>   ..$ I12b : chr [1:100] \"0\" \"9\" \"0\" \"1\" ... #>   ..$ I12c : chr [1:100] \"4\" \"1\" \"2\" \"4\" ... #>   ..$ I13  : chr [1:100] \"9\" \"4\" \"9\" \"4\" ... #>   ..$ I14  : chr [1:100] \"9\" \"4\" \"9\" \"1\" ... #>   ..$ I15  : chr [1:100] \"9\" \"3\" \"9\" \"1\" ... #>   ..$ I16  : chr [1:100] \"9\" \"2\" \"9\" \"2\" ... #>   ..$ I17  : chr [1:100] \"9\" \"3\" \"9\" \"4\" ... #>   ..$ I18  : chr [1:100] \"9\" \"1\" \"9\" \"1\" ... #>   ..$ I19  : chr [1:100] \"9\" \"4\" \"9\" \"2\" ... #>   ..$ I20  : chr [1:100] \"9\" \"1\" \"9\" \"1\" ... #>   ..$ I21  : chr [1:100] \"9\" \"2\" \"9\" \"3\" ... #>  $ booklet2:'data.frame':\t100 obs. of  25 variables: #>   ..$ ID   : chr [1:100] \"person200\" \"person201\" \"person202\" \"person203\" ... #>   ..$ hisei: num [1:100] 69 76 47 58 62 78 70 26 57 70 ... #>   ..$ I08  : chr [1:100] \"0\" \"0\" \"1\" \"0\" ... #>   ..$ I09  : chr [1:100] \"2\" \"4\" \"1\" \"2\" ... #>   ..$ I10  : chr [1:100] \"3\" \"1\" \"2\" \"2\" ... #>   ..$ I11  : chr [1:100] \"4\" \"2\" \"1\" \"4\" ... #>   ..$ I12a : chr [1:100] \"1\" \"0\" \"1\" \"1\" ... #>   ..$ I12b : chr [1:100] \"1\" \"0\" \"1\" \"1\" ... #>   ..$ I12c : chr [1:100] \"4\" \"3\" \"2\" \"2\" ... #>   ..$ I13  : chr [1:100] \"4\" \"2\" \"1\" \"2\" ... #>   ..$ I14  : chr [1:100] \"3\" \"4\" \"2\" \"3\" ... #>   ..$ I15  : chr [1:100] \"4\" \"1\" \"4\" \"4\" ... #>   ..$ I16  : chr [1:100] \"4\" \"3\" \"3\" \"2\" ... #>   ..$ I17  : chr [1:100] \"4\" \"1\" \"2\" \"3\" ... #>   ..$ I18  : chr [1:100] \"1\" \"4\" \"3\" \"2\" ... #>   ..$ I19  : chr [1:100] \"2\" \"1\" \"4\" \"3\" ... #>   ..$ I20  : chr [1:100] \"4\" \"9\" \"2\" \"2\" ... #>   ..$ I21  : chr [1:100] \"2\" \"9\" \"2\" \"1\" ... #>   ..$ I22  : chr [1:100] \"1\" \"9\" \"2\" \"1\" ... #>   ..$ I23  : chr [1:100] \"9\" \"9\" \"2\" \"3\" ... #>   ..$ I24  : chr [1:100] \"1\" \"9\" \"3\" \"3\" ... #>   ..$ I25  : chr [1:100] \"1\" \"9\" \"0\" \"0\" ... #>   ..$ I26  : chr [1:100] \"9\" \"9\" \"1\" \"0\" ... #>   ..$ I27  : chr [1:100] \"0\" \"9\" \"1\" \"0\" ... #>   ..$ I28  : chr [1:100] \"1\" \"9\" \"1\" \"0\" ... #>  $ booklet3:'data.frame':\t100 obs. of  23 variables: #>   ..$ ID   : chr [1:100] \"person300\" \"person301\" \"person302\" \"person303\" ... #>   ..$ hisei: num [1:100] 49 NA 57 32 59 56 55 47 NA 50 ... #>   ..$ I01  : chr [1:100] \"2\" \"3\" \"2\" \"1\" ... #>   ..$ I02  : chr [1:100] \"4\" \"3\" \"3\" \"3\" ... #>   ..$ I03  : chr [1:100] \"3\" \"1\" \"1\" \"1\" ... #>   ..$ I04  : chr [1:100] \"1\" \"3\" \"1\" \"1\" ... #>   ..$ I05  : chr [1:100] \"0\" \"1\" \"1\" \"0\" ... #>   ..$ I06  : chr [1:100] \"9\" \"1\" \"0\" \"1\" ... #>   ..$ I07  : chr [1:100] \"8\" \"2\" \"2\" \"1\" ... #>   ..$ I15  : chr [1:100] \"3\" \"9\" \"9\" \"9\" ... #>   ..$ I16  : chr [1:100] \"1\" \"3\" \"3\" \"3\" ... #>   ..$ I17  : chr [1:100] \"4\" \"4\" \"4\" \"4\" ... #>   ..$ I18  : chr [1:100] \"4\" \"4\" \"4\" \"4\" ... #>   ..$ I19  : chr [1:100] \"2\" \"9\" \"9\" \"9\" ... #>   ..$ I20  : chr [1:100] \"3\" \"4\" \"2\" \"4\" ... #>   ..$ I21  : chr [1:100] \"3\" \"2\" \"2\" \"2\" ... #>   ..$ I22  : chr [1:100] \"3\" \"4\" \"4\" \"9\" ... #>   ..$ I23  : chr [1:100] \"3\" \"1\" \"1\" \"9\" ... #>   ..$ I24  : chr [1:100] \"1\" \"1\" \"1\" \"9\" ... #>   ..$ I25  : chr [1:100] \"0\" \"1\" \"9\" \"9\" ... #>   ..$ I26  : chr [1:100] \"1\" \"0\" \"9\" \"9\" ... #>   ..$ I27  : chr [1:100] \"0\" \"9\" \"9\" \"9\" ... #>   ..$ I28  : chr [1:100] \"0\" \"9\" \"9\" \"9\" ...  mergedDataset <- mergeData(\"idstud\", inputDat, c(\"ID\", \"ID\", \"ID\"), addMbd=TRUE) #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. #> Start adding mbd according to data pattern. str(mergedDataset) #> 'data.frame':\t300 obs. of  32 variables: #>  $ idstud: chr  \"person100\" \"person101\" \"person102\" \"person103\" ... #>  $ hisei : num  49 NA 57 32 59 56 55 47 NA 50 ... #>  $ I01   : chr  \"1\" \"9\" \"3\" \"2\" ... #>  $ I02   : chr  \"4\" \"4\" \"4\" \"4\" ... #>  $ I03   : chr  \"1\" \"2\" \"2\" \"3\" ... #>  $ I04   : chr  \"2\" \"2\" \"3\" \"1\" ... #>  $ I05   : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I06   : chr  \"0\" \"9\" \"0\" \"1\" ... #>  $ I07   : chr  \"2\" \"2\" \"2\" \"3\" ... #>  $ I08   : chr  \"0\" \"1\" \"0\" \"0\" ... #>  $ I09   : chr  \"2\" \"2\" \"2\" \"3\" ... #>  $ I10   : chr  \"2\" \"1\" \"1\" \"4\" ... #>  $ I11   : chr  \"4\" \"1\" \"3\" \"2\" ... #>  $ I12a  : chr  \"1\" \"0\" \"1\" \"0\" ... #>  $ I12b  : chr  \"0\" \"9\" \"0\" \"1\" ... #>  $ I12c  : chr  \"4\" \"1\" \"2\" \"4\" ... #>  $ I13   : chr  \"9\" \"4\" \"9\" \"4\" ... #>  $ I14   : chr  \"9\" \"4\" \"9\" \"1\" ... #>  $ I15   : chr  \"9\" \"3\" \"9\" \"1\" ... #>  $ I16   : chr  \"9\" \"2\" \"9\" \"2\" ... #>  $ I17   : chr  \"9\" \"3\" \"9\" \"4\" ... #>  $ I18   : chr  \"9\" \"1\" \"9\" \"1\" ... #>  $ I19   : chr  \"9\" \"4\" \"9\" \"2\" ... #>  $ I20   : chr  \"9\" \"1\" \"9\" \"1\" ... #>  $ I21   : chr  \"9\" \"2\" \"9\" \"3\" ... #>  $ I22   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I23   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I24   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I25   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I26   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I27   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I28   : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ...  mergedDataset <- mergeData(\"ID\", inputDat, verbose=TRUE) #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. str(mergedDataset) #> 'data.frame':\t300 obs. of  32 variables: #>  $ ID   : chr  \"person100\" \"person101\" \"person102\" \"person103\" ... #>  $ hisei: num  49 NA 57 32 59 56 55 47 NA 50 ... #>  $ I01  : chr  \"1\" \"9\" \"3\" \"2\" ... #>  $ I02  : chr  \"4\" \"4\" \"4\" \"4\" ... #>  $ I03  : chr  \"1\" \"2\" \"2\" \"3\" ... #>  $ I04  : chr  \"2\" \"2\" \"3\" \"1\" ... #>  $ I05  : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I06  : chr  \"0\" \"9\" \"0\" \"1\" ... #>  $ I07  : chr  \"2\" \"2\" \"2\" \"3\" ... #>  $ I08  : chr  \"0\" \"1\" \"0\" \"0\" ... #>  $ I09  : chr  \"2\" \"2\" \"2\" \"3\" ... #>  $ I10  : chr  \"2\" \"1\" \"1\" \"4\" ... #>  $ I11  : chr  \"4\" \"1\" \"3\" \"2\" ... #>  $ I12a : chr  \"1\" \"0\" \"1\" \"0\" ... #>  $ I12b : chr  \"0\" \"9\" \"0\" \"1\" ... #>  $ I12c : chr  \"4\" \"1\" \"2\" \"4\" ... #>  $ I13  : chr  \"9\" \"4\" \"9\" \"4\" ... #>  $ I14  : chr  \"9\" \"4\" \"9\" \"1\" ... #>  $ I15  : chr  \"9\" \"3\" \"9\" \"1\" ... #>  $ I16  : chr  \"9\" \"2\" \"9\" \"2\" ... #>  $ I17  : chr  \"9\" \"3\" \"9\" \"4\" ... #>  $ I18  : chr  \"9\" \"1\" \"9\" \"1\" ... #>  $ I19  : chr  \"9\" \"4\" \"9\" \"2\" ... #>  $ I20  : chr  \"9\" \"1\" \"9\" \"1\" ... #>  $ I21  : chr  \"9\" \"2\" \"9\" \"3\" ... #>  $ I22  : chr  NA NA NA NA ... #>  $ I23  : chr  NA NA NA NA ... #>  $ I24  : chr  NA NA NA NA ... #>  $ I25  : chr  NA NA NA NA ... #>  $ I26  : chr  NA NA NA NA ... #>  $ I27  : chr  NA NA NA NA ... #>  $ I28  : chr  NA NA NA NA ..."},{"path":"https://sachseka.github.io/eatPrep/reference/mnrCoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Missing by Intention to Missing not Reached — mnrCoding","title":"Recode Missing by Intention to Missing not Reached — mnrCoding","text":"mnrCoding converts missing responses coded missing intention end block items missing reached.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/mnrCoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Missing by Intention to Missing not Reached — mnrCoding","text":"","code":"mnrCoding (dat, pid, rotation.id, blocks, booklets, breaks,      subunits = NULL, nMbi = 2, mbiCode = \"mbi\", mnrCode = \"mnr\",      invalidCodes = c(\"mbd\", \"mir\", \"mci\"), verbose = FALSE)"},{"path":"https://sachseka.github.io/eatPrep/reference/mnrCoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Missing by Intention to Missing not Reached — mnrCoding","text":"dat dataset. Missing intention needs coded mbi. pid Name column number identifier (ID) variable dat rotation.id character vector length 1 indicating column name test booklet identfier dat. blocks data frame containing sequence subunits block long format. column names need subunit, block, subunitBlockPosition. booklets data frame containing sequence blocks booklet wide format. column names need booklet, block1, block2, block3 ....  breaks Number blocks mbi shall recoded mnr, e.g., c(1,2) specify breaks first second block. subunits Optional: data frame subunit information dataset used recoded recodeData. data frame used find names recoded subunits dat. nMbi Number mbi-Codes required end block code mnr. Needs > 0. mbiCode Character indicating mbi (missing intention) dataset. mnrCode Character mnr recoded. invalidCodes Character vector indicating missing codes ignored. verbose logical. TRUE additional diagnostics printed.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/mnrCoding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recode Missing by Intention to Missing not Reached — mnrCoding","text":"order code mnr, certain number subunits end block need coded mbi. number can specified argument nMbi. default 2, .e. last second last subitem block coded mbi, subunits, well preceding subunits coded mbi, recoded mnr. nMbi larger number subunits given block, subitem block recoded. subunits block coded mbi, none recoded mnr. subunits data frame specified, recodeMbiToMnr expects find recoded subunits dat. Examples data frames booklets, blocks, rotation subunits can found via data(inputList)","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/mnrCoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Missing by Intention to Missing not Reached — mnrCoding","text":"data frame missing reached coded mnr. person least one mnr returned dataset names recoded variables given attribute dat.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/mnrCoding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Missing by Intention to Missing not Reached — mnrCoding","text":"","code":"data(inputDat) data(inputList)  prepDat <- automateDataPreparation (inputList = inputList,      datList = inputDat, readSpss = FALSE, checkData=FALSE,      mergeData = TRUE, recodeData=TRUE, aggregateData=FALSE,      scoreData= FALSE, writeSpss=FALSE, verbose = TRUE) #> Starting automateDataPreparation 2025-02-19 15:54:21.481677 #>  #> Check has been skipped. #>  #> Start merging. #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. #> Start adding mbd according to data pattern. #>  #> Start recoding. #>  #> Found no recode information for variable(s):  #> ID, hisei.  #> This/These variable(s) will not be recoded. #>  #> Variables... I01, I02, I03, I04, I05, I06, I07, I08, I09, I10, I11, I12a, I12b, I12c, I13, I14, I15, I16, I17, I18, I19, I20, I21, I22, I23, I24, I25, I26, I27, I28 #> ...have been recoded. #>  #> RecodeMnr has been skipped. #>  #> Aggregate has been skipped. #>  #> Scoring has been skipped. #>  #> No SPSS-File has been written. #>  #> Missings are UNcollapsed. #> automateDataPreparation terminated successfully! 2025-02-19 15:54:21.594868         prepDat2 <- mergeData(\"ID\", list(prepDat, inputList$rotation))        #> Start merging of dataset 1. #> Start merging of dataset 2.           mnrDat <- mnrCoding (dat = prepDat2, pid = \"ID\",      booklets = inputList$booklets, blocks = inputList$blocks,      rotation.id = \"booklet\", breaks = c(1, 2),      subunits = inputList$subunits, nMbi = 2, mbiCode = \"mbi\",      mnrCode = \"mnr\", invalidCodes = c(\"mbd\", \"mir\", \"mci\"),      verbose = TRUE) #> ...identifying items in data (reference is blocks$subunit) #> Variables in data not recognized as items: #> ID, hisei, booklet #> If some of these excluded variables should have been identified as items (and thus be used for mnr coding) check 'blocks', 'subunits', 'dat'. #> ...identifying items with no mbi-codes ('mbi'): #> I04R, I08R #> If you expect mbi-codes on these variables check your data and option 'mbiCode' #> mnr statistics: #>      mnr cells: 553 #>      unique cases with at least one mnr code: 89 #>      unique items with at least one mnr code: 16 #> unique cases ('ID') per booklet and booklet section (0s omitted): #>    booklet booklet.section N.ID #> 1 booklet1               2   11 #> 2 booklet1               3   28 #> 3 booklet2               1   28 #> 4 booklet2               2   11 #> 5 booklet2               3    1 #> 6 booklet3               3   31 #>  #> start recoding (item-wise) #> done #> elapsed time: 0.1 secs"},{"path":"https://sachseka.github.io/eatPrep/reference/prep2gads.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert eatPrep Data and Meta Info to GADSdat object as used in package eatGADS — prep2GADS","title":"Convert eatPrep Data and Meta Info to GADSdat object as used in package eatGADS — prep2GADS","text":"function converts data.frame data prepared IRT analyses eatPrep eatGADS object.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/prep2gads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert eatPrep Data and Meta Info to GADSdat object as used in package eatGADS — prep2GADS","text":"","code":"prep2GADS(dat, inputList, trafoType = c(\"scored\", \"raw\"), misTypes = list(mvi = -95, mnr = -96, mci = -97, mbd = -94, mir = -98, mbi = -99), verbose = TRUE)"},{"path":"https://sachseka.github.io/eatPrep/reference/prep2gads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert eatPrep Data and Meta Info to GADSdat object as used in package eatGADS — prep2GADS","text":"dat data.frame, typically one last transformation status eatPrep-based transformations ('scoring'). However, merged, recoded aggregated, scored data can also handled, long data.frames' colnames correspond unit-names 'units' inputList (trafoType==\"scored\"). Merged recoded, aggregated scored data can also converted GADSdat object (using trafoType==\"raw\"). inputList list following typical structure eatPrep inputList. first three data frames needed utilize function. See ‘Details’. trafoType Character string. Whether raw data (including original values subunits) scored data (usually, 0/1 mistypes like mbi/mbo et al. everything aggregated units) shall exported. misTypes named list definitions recode different types missings (mainly used trafoType==\"scored\"). verbose logical. TRUE, additional information printed.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/prep2gads.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert eatPrep Data and Meta Info to GADSdat object as used in package eatGADS — prep2GADS","text":"function converts recoded, aggregated scored data set eatGADS object using meta information stored inputList. first three data.frames typical inputList used (subunits, values units). However, order three data.frames inputList irrelevant. Examples data frames subunits, values units can found via data(inputList).","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/prep2gads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert eatPrep Data and Meta Info to GADSdat object as used in package eatGADS — prep2GADS","text":"GADSdat object.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/prep2gads.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert eatPrep Data and Meta Info to GADSdat object as used in package eatGADS — prep2GADS","text":"Karoline Sachse","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/prep2gads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert eatPrep Data and Meta Info to GADSdat object as used in package eatGADS — prep2GADS","text":"","code":"data(inputDat) data(inputList)  prepDatScored <- automateDataPreparation(inputList = inputList, datList = inputDat,     readSpss = FALSE, checkData=FALSE, mergeData = TRUE, recodeData=TRUE,     aggregateData=TRUE, scoreData=TRUE, writeSpss=FALSE, verbose = TRUE) #> Starting automateDataPreparation 2025-02-19 15:54:21.950783 #>  #> Check has been skipped. #>  #> Start merging. #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. #> Start adding mbd according to data pattern. #>  #> Start recoding. #>  #> Found no recode information for variable(s):  #> ID, hisei.  #> This/These variable(s) will not be recoded. #>  #> Variables... I01, I02, I03, I04, I05, I06, I07, I08, I09, I10, I11, I12a, I12b, I12c, I13, I14, I15, I16, I17, I18, I19, I20, I21, I22, I23, I24, I25, I26, I27, I28 #> ...have been recoded. #>  #> RecodeMnr has been skipped. #>  #> Start aggregating #> Since inputList$aggrMiss exists, this will be used instead of default. #> All aggregation rules will be defaulted to 'SUM', because no other type is currently supported. #> Found 27 unit(s) with only one subunit in 'dat'. This/these subunit(s) will not be aggregated and renamed to their respective unit name(s). #> 1 units were aggregated: I12. #>  #> Start scoring. #> ✔ 1 unit was scored: `I12`. #>  #> No SPSS-File has been written. #>  #> Missings are UNcollapsed. #> automateDataPreparation terminated successfully! 2025-02-19 15:54:22.094021  GADSobj1 <- prep2GADS(dat = prepDatScored, inputList = inputList[1:3], trafoType = \"scored\",                                 verbose=TRUE) #>  #> ── Check: Variables without info  #> ℹ The following 1 variable is not in inputList ($units$unit) but in dataset, #> its meta data will be set to NA: `hisei`  prepDatRaw <- automateDataPreparation(inputList = inputList, datList = inputDat,     readSpss = FALSE, checkData=FALSE, mergeData = TRUE, recodeData=FALSE,     aggregateData=FALSE, scoreData=FALSE, writeSpss=FALSE, verbose = TRUE) #> Starting automateDataPreparation 2025-02-19 15:54:22.135762 #>  #> Check has been skipped. #>  #> Start merging. #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. #> Start adding mbd according to data pattern. #>  #> Recode has been skipped. #>  #> RecodeMnr has been skipped. #>  #> Aggregate has been skipped. #>  #> Scoring has been skipped. #>  #> No SPSS-File has been written. #>  #> Missings are UNcollapsed. #> automateDataPreparation terminated successfully! 2025-02-19 15:54:22.175625  GADSobj2 <- prep2GADS(dat = prepDatRaw, inputList = inputList[1:3], trafoType = \"raw\",                                 verbose=TRUE) #>  #> ── Check: Variables without info  #> ℹ The following 1 variable is not in inputList ($subunits$subunit or #> $units$unit) but in dataset, its meta data will be set to NA: `hisei`"},{"path":"https://sachseka.github.io/eatPrep/reference/rater.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable ratings for 1287 examinees, 7 variables and 4 raters. — rater","title":"Variable ratings for 1287 examinees, 7 variables and 4 raters. — rater","text":"data set contains fictional ratings achievement test items 1287 examinees, 7 variables 4 raters long format.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/rater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable ratings for 1287 examinees, 7 variables and 4 raters. — rater","text":"","code":"data(rater)"},{"path":"https://sachseka.github.io/eatPrep/reference/rater.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Variable ratings for 1287 examinees, 7 variables and 4 raters. — rater","text":"'data.frame':   4200 obs.  4 variables id Student identifier rater rater identifier variable Variable identifier value rating given corresponding rater response student variable","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/rater.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Variable ratings for 1287 examinees, 7 variables and 4 raters. — rater","text":"Simulated data","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readDaemonXlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Read xlsx-Files Produced by ZKDaemon — readDaemonXlsx","title":"Read xlsx-Files Produced by ZKDaemon — readDaemonXlsx","text":"function primarily intended internal use Institute Educational Quality Improvement (IQB). xlsx-files function produced software ZKDaemon using information stored IQB-Databases (DB2/DB3/DB4).","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readDaemonXlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read xlsx-Files Produced by ZKDaemon — readDaemonXlsx","text":"","code":"readDaemonXlsx(filename)"},{"path":"https://sachseka.github.io/eatPrep/reference/readDaemonXlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read xlsx-Files Produced by ZKDaemon — readDaemonXlsx","text":"filename character string containing path, name extension .xlsx produced ZKDaemon.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readDaemonXlsx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read xlsx-Files Produced by ZKDaemon — readDaemonXlsx","text":"xlsx-file produced 'ZKDaemon' expected following sheets: “units”, “subunits”, “values”, “unitrecoding”, “sav-files”, “params”, “aggregate-missings”, “itemproperties”, “propertylabels”, “booklets”, “blocks”. readDaemonXlsx produce warning sheets missing wrongly specified.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readDaemonXlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read xlsx-Files Produced by ZKDaemon — readDaemonXlsx","text":"list data frames containing information required data preparation functions eatPrep. inputList shows example list.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readDaemonXlsx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read xlsx-Files Produced by ZKDaemon — readDaemonXlsx","text":"Karoline Sachse","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readDaemonXlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read xlsx-Files Produced by ZKDaemon — readDaemonXlsx","text":"","code":"readDaemonXlsx(system.file(\"extdata\", \"inputList.xlsx\", package = \"eatPrep\")) #> Reading sheet 'units'. #> Reading sheet 'subunits'. #> Reading sheet 'values'. #> Reading sheet 'unitrecoding'. #> Reading sheet 'sav-files'. #> Reading sheet 'params'. #> Reading sheet 'aggregate-missings'. #> Reading sheet 'booklets'. #> Reading sheet 'blocks'. #> $units #>    unit                              unitLabel unitDescription unitType #> 1   I01              Animals: Weight of a duck            <NA>       TI #> 2   I02             Animals: Weight of a horse            <NA>       TI #> 3   I03             Animals: Weight of a mouse            <NA>       TI #> 4   I04               Animals: Weight of a cat            <NA>       TI #> 5   I05                    Conversion: 0.14 cm            <NA>       TI #> 6   I06        MissingNumber: 13 - 26 - x - 52            <NA>       TI #> 7   I07                          Pizza: Choice            <NA>       TI #> 8   I08            Pizza: Reasoning for choice            <NA>       TI #> 9   I09    Birds: Which bird has lightest eggs            <NA>       TI #> 10  I10       Birds: Which bird has least eggs            <NA>       TI #> 11  I11  Birds: Which bird has heaviest clutch            <NA>       TI #> 12  I12                                 Shapes            <NA>       TI #> 13  I13 Sweets: How many possibilities to hide            <NA>       TI #> 14  I14          Shopping: Number combinations            <NA>       TI #> 15  I15                Shopping: Number prices            <NA>       TI #> 16  I16              Breakfast: Amount of nuts            <NA>       TI #> 17  I17              Breakfast: Amount of milk            <NA>       TI #> 18  I18              Breakfast: Amount of oats            <NA>       TI #> 19  I19   Birthdays: Month with most birthdays            <NA>       TI #> 20  I20  Birthdays: Which statement is correct            <NA>       TI #> 21  I21   Birthdays: Number birthdays in April            <NA>       TI #> 22  I22       Dice: Which result is impossible            <NA>       TI #> 23  I23      Dice: Which result is most likely            <NA>       TI #> 24  I24         Football: Team with most goals            <NA>       TI #> 25  I25                Football: Correct graph            <NA>       TI #> 26  I26                          Braking: Time            <NA>       TI #> 27  I27                           Braking: Way            <NA>       TI #> 28  I28                         Braking: Speed            <NA>       TI #> 29   ID                             Student ID            <NA>       ID #>    unitAggregateRule unitScoreRule #> 1               <NA>          <NA> #> 2               <NA>          <NA> #> 3               <NA>          <NA> #> 4               <NA>          <NA> #> 5               <NA>          <NA> #> 6               <NA>          <NA> #> 7               <NA>          <NA> #> 8               <NA>          <NA> #> 9               <NA>          <NA> #> 10              <NA>          <NA> #> 11              <NA>          <NA> #> 12               SUM          <NA> #> 13              <NA>          <NA> #> 14              <NA>          <NA> #> 15              <NA>          <NA> #> 16              <NA>          <NA> #> 17              <NA>          <NA> #> 18              <NA>          <NA> #> 19              <NA>          <NA> #> 20              <NA>          <NA> #> 21              <NA>          <NA> #> 22              <NA>          <NA> #> 23              <NA>          <NA> #> 24              <NA>          <NA> #> 25              <NA>          <NA> #> 26              <NA>          <NA> #> 27              <NA>          <NA> #> 28              <NA>          <NA> #> 29              <NA>          <NA> #>  #> $subunits #>    unit subunit subunitType                           subunitLabel #> 1   I01     I01           1              Animals: Weight of a duck #> 2   I02     I02           1             Animals: Weight of a horse #> 3   I03     I03           1             Animals: Weight of a mouse #> 4   I04     I04           1               Animals: Weight of a cat #> 5   I05     I05           3                    Conversion: 0.14 cm #> 6   I06     I06           3        MissingNumber: 13 - 26 - x - 52 #> 7   I07     I07           1                          Pizza: Choice #> 8   I08     I08           3            Pizza: Reasoning for choice #> 9   I09     I09           1    Birds: Which bird has lightest eggs #> 10  I10     I10           1       Birds: Which bird has least eggs #> 11  I11     I11           1  Birds: Which bird has heaviest clutch #> 12  I12    I12a           3                  Shapes: Biggest shape #> 13  I12    I12b           3                  Shapes: Circumference #> 14  I12    I12c           1               Shapes: Size calculation #> 15  I13     I13           1 Sweets: How many possibilities to hide #> 16  I14     I14           1          Shopping: Number combinations #> 17  I15     I15           1                Shopping: Number prices #> 18  I16     I16           1              Breakfast: Amount of nuts #> 19  I17     I17           1              Breakfast: Amount of milk #> 20  I18     I18           1              Breakfast: Amount of oats #> 21  I19     I19           1   Birthdays: Month with most birthdays #> 22  I20     I20           1  Birthdays: Which statement is correct #> 23  I21     I21           1   Birthdays: Number birthdays in April #> 24  I22     I22           1       Dice: Which result is impossible #> 25  I23     I23           1      Dice: Which result is most likely #> 26  I24     I24           1         Football: Team with most goals #> 27  I25     I25           3                Football: Correct graph #> 28  I26     I26           3                          Braking: Time #> 29  I27     I27           3                           Braking: Way #> 30  I28     I28           3                         Braking: Speed #>    subunitDescription subunitPosition subunitTransniveau subunitRecoded #> 1                <NA>              a)               <NA>           I01R #> 2                <NA>              b)               <NA>           I02R #> 3                <NA>              c)               <NA>           I03R #> 4                <NA>              d)               <NA>           I04R #> 5                <NA>            <NA>               <NA>           I05R #> 6                <NA>            <NA>               <NA>           I06R #> 7                <NA>            <NA>               <NA>           I07R #> 8                <NA>            <NA>               <NA>           I08R #> 9                <NA>            <NA>               <NA>           I09R #> 10               <NA>            <NA>               <NA>           I10R #> 11               <NA>            <NA>               <NA>           I11R #> 12               <NA>            <NA>               <NA>          I12aR #> 13               <NA>            <NA>               <NA>          I12bR #> 14               <NA>            <NA>               <NA>          I12cR #> 15               <NA>            <NA>               <NA>           I13R #> 16               <NA>            <NA>               <NA>           I14R #> 17               <NA>            <NA>               <NA>           I15R #> 18               <NA>            <NA>               <NA>           I16R #> 19               <NA>            <NA>               <NA>           I17R #> 20               <NA>            <NA>               <NA>           I18R #> 21               <NA>            <NA>               <NA>           I19R #> 22               <NA>            <NA>               <NA>           I20R #> 23               <NA>            <NA>               <NA>           I21R #> 24               <NA>            <NA>               <NA>           I22R #> 25               <NA>            <NA>               <NA>           I23R #> 26               <NA>            <NA>               <NA>           I24R #> 27               <NA>            <NA>               <NA>           I25R #> 28               <NA>            <NA>               <NA>           I26R #> 29               <NA>            <NA>               <NA>           I27R #> 30               <NA>            <NA>               <NA>           I28R #>                               subunitLabelRecoded #> 1               Recoded Animals: Weight of a duck #> 2              Recoded Animals: Weight of a horse #> 3              Recoded Animals: Weight of a mouse #> 4                Recoded Animals: Weight of a cat #> 5                     Recoded Conversion: 0.14 cm #> 6         Recoded MissingNumber: 13 - 26 - x - 52 #> 7                           Recoded Pizza: Choice #> 8             Recoded Pizza: Reasoning for choice #> 9     Recoded Birds: Which bird has lightest eggs #> 10       Recoded Birds: Which bird has least eggs #> 11  Recoded Birds: Which bird has heaviest clutch #> 12                  Recoded Shapes: Biggest shape #> 13                  Recoded Shapes: Circumference #> 14               Recoded Shapes: Size calculation #> 15 Recoded Sweets: How many possibilities to hide #> 16          Recoded Shopping: Number combinations #> 17                Recoded Shopping: Number prices #> 18              Recoded Breakfast: Amount of nuts #> 19              Recoded Breakfast: Amount of milk #> 20              Recoded Breakfast: Amount of oats #> 21   Recoded Birthdays: Month with most birthdays #> 22  Recoded Birthdays: Which statement is correct #> 23   Recoded Birthdays: Number birthdays in April #> 24       Recoded Dice: Which result is impossible #> 25      Recoded Dice: Which result is most likely #> 26         Recoded Football: Team with most goals #> 27                Recoded Football: Correct graph #> 28                          Recoded Braking: Time #> 29                           Recoded Braking: Way #> 30                         Recoded Braking: Speed #>  #> $values #>     subunit value valueRecode valueType #> 1       I01     1           0        vc #> 2       I01     2           0        vc #> 3       I01     3           1        vc #> 4       I01     6         mnr       mnr #> 5       I01     7         mbd       mbd #> 6       I01     8         mir       mir #> 7       I01     9         mbi       mbi #> 8       I02     1           1        vc #> 9       I02     2           0        vc #> 10      I02     3           0        vc #> 11      I02     4           0        vc #> 12      I02     6         mnr       mnr #> 13      I02     7         mbd       mbd #> 14      I02     8         mir       mir #> 15      I02     9         mbi       mbi #> 16      I03     1           0        vc #> 17      I03     2           1        vc #> 18      I03     3           0        vc #> 19      I03     6         mnr       mnr #> 20      I03     7         mbd       mbd #> 21      I03     8         mir       mir #> 22      I03     9         mbi       mbi #> 23      I04     1           0        vc #> 24      I04     2           1        vc #> 25      I04     3           0        vc #> 26      I04     6         mnr       mnr #> 27      I04     7         mbd       mbd #> 28      I04     8         mir       mir #> 29      I04     9         mbi       mbi #> 30      I05     0           0        vc #> 31      I05     1           1        vc #> 32      I05     6         mnr       mnr #> 33      I05     7         mbd       mbd #> 34      I05     8         mir       mir #> 35      I05     9         mbi       mbi #> 36      I06     0           0        vc #> 37      I06     1           1        vc #> 38      I06     6         mnr       mnr #> 39      I06     7         mbd       mbd #> 40      I06     8         mir       mir #> 41      I06     9         mbi       mbi #> 42      I07     1           1        vc #> 43      I07     2           0        vc #> 44      I07     3           0        vc #> 45      I07     4           0        vc #> 46      I07     6         mnr       mnr #> 47      I07     7         mbd       mbd #> 48      I07     8         mir       mir #> 49      I07     9         mbi       mbi #> 50      I08     0           0        vc #> 51      I08     1           1        vc #> 52      I08     6         mnr       mnr #> 53      I08     7         mbd       mbd #> 54      I08     8         mir       mir #> 55      I08     9         mbi       mbi #> 56      I09     1           0        vc #> 57      I09     2           0        vc #> 58      I09     3           0        vc #> 59      I09     4           1        vc #> 60      I09     6         mnr       mnr #> 61      I09     7         mbd       mbd #> 62      I09     8         mir       mir #> 63      I09     9         mbi       mbi #> 64      I10     1           0        vc #> 65      I10     2           1        vc #> 66      I10     3           0        vc #> 67      I10     4           0        vc #> 68      I10     6         mnr       mnr #> 69      I10     7         mbd       mbd #> 70      I10     8         mir       mir #> 71      I10     9         mbi       mbi #> 72      I11     1           0        vc #> 73      I11     2           0        vc #> 74      I11     3           1        vc #> 75      I11     4           0        vc #> 76      I11     6         mnr       mnr #> 77      I11     7         mbd       mbd #> 78      I11     8         mir       mir #> 79      I11     9         mbi       mbi #> 80     I12a     0           0        vc #> 81     I12a     1           1        vc #> 82     I12a     6         mnr       mnr #> 83     I12a     7         mbd       mbd #> 84     I12a     8         mir       mir #> 85     I12a     9         mbi       mbi #> 86     I12b     0           0        vc #> 87     I12b     1           1        vc #> 88     I12b     6         mnr       mnr #> 89     I12b     7         mbd       mbd #> 90     I12b     8         mir       mir #> 91     I12b     9         mbi       mbi #> 92     I12c     1           0        vc #> 93     I12c     2           0        vc #> 94     I12c     3           0        vc #> 95     I12c     4           1        vc #> 96     I12c     6         mnr       mnr #> 97     I12c     7         mbd       mbd #> 98     I12c     8         mir       mir #> 99     I12c     9         mbi       mbi #> 100     I13     1           0        vc #> 101     I13     2           1        vc #> 102     I13     3           0        vc #> 103     I13     4           0        vc #> 104     I13     6         mnr       mnr #> 105     I13     7         mbd       mbd #> 106     I13     8         mir       mir #> 107     I13     9         mbi       mbi #> 108     I14     1           0        vc #> 109     I14     2           0        vc #> 110     I14     3           0        vc #> 111     I14     4           0        vc #> 112     I14     5           0        vc #> 113     I14     6           1        vc #> 114     I14     7           0        vc #> 115     I14     8         mir       mir #> 116     I14     9         mbi       mbi #> 117     I15     1           1        vc #> 118     I15     2           0        vc #> 119     I15     3           0        vc #> 120     I15     4           0        vc #> 121     I15     6         mnr       mnr #> 122     I15     7         mbd       mbd #> 123     I15     8         mir       mir #> 124     I15     9         mbi       mbi #> 125     I16     1           0        vc #> 126     I16     2           0        vc #> 127     I16     3           0        vc #> 128     I16     4           1        vc #> 129     I16     6         mnr       mnr #> 130     I16     7         mbd       mbd #> 131     I16     8         mir       mir #> 132     I16     9         mbi       mbi #> 133     I17     1           0        vc #> 134     I17     2           1        vc #> 135     I17     3           0        vc #> 136     I17     4           0        vc #> 137     I17     6         mnr       mnr #> 138     I17     7         mbd       mbd #> 139     I17     8         mir       mir #> 140     I17     9         mbi       mbi #> 141     I18     1           1        vc #> 142     I18     2           0        vc #> 143     I18     3           0        vc #> 144     I18     4           0        vc #> 145     I18     6         mnr       mnr #> 146     I18     7         mbd       mbd #> 147     I18     8         mir       mir #> 148     I18     9         mbi       mbi #> 149     I19     1           0        vc #> 150     I19     2           0        vc #> 151     I19     3           0        vc #> 152     I19     4           1        vc #> 153     I19     6         mnr       mnr #> 154     I19     7         mbd       mbd #> 155     I19     8         mir       mir #> 156     I19     9         mbi       mbi #> 157     I20     1           0        vc #> 158     I20     2           1        vc #> 159     I20     3           0        vc #> 160     I20     4           0        vc #> 161     I20     6         mnr       mnr #> 162     I20     7         mbd       mbd #> 163     I20     8         mir       mir #> 164     I20     9         mbi       mbi #> 165     I21     1           0        vc #> 166     I21     2           0        vc #> 167     I21     3           1        vc #> 168     I21     4           0        vc #> 169     I21     6         mnr       mnr #> 170     I21     7         mbd       mbd #> 171     I21     8         mir       mir #> 172     I21     9         mbi       mbi #> 173     I22     1           1        vc #> 174     I22     2           0        vc #> 175     I22     3           0        vc #> 176     I22     4           0        vc #> 177     I22     6         mnr       mnr #> 178     I22     7         mbd       mbd #> 179     I22     8         mir       mir #> 180     I22     9         mbi       mbi #> 181     I23     1           1        vc #> 182     I23     2           0        vc #> 183     I23     3           0        vc #> 184     I23     4           0        vc #> 185     I23     6         mnr       mnr #> 186     I23     7         mbd       mbd #> 187     I23     8         mir       mir #> 188     I23     9         mbi       mbi #> 189     I24     1           0        vc #> 190     I24     2           1        vc #> 191     I24     3           0        vc #> 192     I24     4           0        vc #> 193     I24     6         mnr       mnr #> 194     I24     7         mbd       mbd #> 195     I24     8         mir       mir #> 196     I24     9         mbi       mbi #> 197     I25     0           0        vc #> 198     I25     1           1        vc #> 199     I25     6         mnr       mnr #> 200     I25     7         mbd       mbd #> 201     I25     8         mir       mir #> 202     I25     9         mbi       mbi #> 203     I26     0           0        vc #> 204     I26     1           1        vc #> 205     I26     6         mnr       mnr #> 206     I26     7         mbd       mbd #> 207     I26     8         mir       mir #> 208     I26     9         mbi       mbi #> 209     I27     0           0        vc #> 210     I27     1           1        vc #> 211     I27     6         mnr       mnr #> 212     I27     7         mbd       mbd #> 213     I27     8         mir       mir #> 214     I27     9         mbi       mbi #> 215     I28     0           0        vc #> 216     I28     1           1        vc #> 217     I28     6         mnr       mnr #> 218     I28     7         mbd       mbd #> 219     I28     8         mir       mir #> 220     I28     9         mbi       mbi #>                                         valueLabel #> 1                         Response option 1 marked #> 2                         Response option 2 marked #> 3                         Response option 3 marked #> 4                              missing not reached #> 5                                missing by design #> 6                         missing invalid response #> 7                             missing by intention #> 8                         Response option 1 marked #> 9                         Response option 2 marked #> 10                        Response option 3 marked #> 11                        Response option 4 marked #> 12                             missing not reached #> 13                               missing by design #> 14                        missing invalid response #> 15                            missing by intention #> 16                        Response option 1 marked #> 17                        Response option 2 marked #> 18                        Response option 3 marked #> 19                             missing not reached #> 20                               missing by design #> 21                        missing invalid response #> 22                            missing by intention #> 23                        Response option 1 marked #> 24                        Response option 2 marked #> 25                        Response option 3 marked #> 26                             missing not reached #> 27                               missing by design #> 28                        missing invalid response #> 29                            missing by intention #> 30                                           other #> 31                      14 mm (units not required) #> 32                             missing not reached #> 33                               missing by design #> 34                        missing invalid response #> 35                            missing by intention #> 36                                           other #> 37                                              39 #> 38                             missing not reached #> 39                               missing by design #> 40                        missing invalid response #> 41                            missing by intention #> 42                        Response option 1 marked #> 43                        Response option 2 marked #> 44                        Response option 3 marked #> 45                        Response option 4 marked #> 46                             missing not reached #> 47                               missing by design #> 48                        missing invalid response #> 49                            missing by intention #> 50                                           other #> 51  Surface area increases more rapidly than price #> 52                             missing not reached #> 53                               missing by design #> 54                        missing invalid response #> 55                            missing by intention #> 56                        Response option 1 marked #> 57                        Response option 2 marked #> 58                        Response option 3 marked #> 59                        Response option 4 marked #> 60                             missing not reached #> 61                               missing by design #> 62                        missing invalid response #> 63                            missing by intention #> 64                        Response option 1 marked #> 65                        Response option 2 marked #> 66                        Response option 3 marked #> 67                        Response option 4 marked #> 68                             missing not reached #> 69                               missing by design #> 70                        missing invalid response #> 71                            missing by intention #> 72                        Response option 1 marked #> 73                        Response option 2 marked #> 74                        Response option 3 marked #> 75                        Response option 4 marked #> 76                             missing not reached #> 77                               missing by design #> 78                        missing invalid response #> 79                            missing by intention #> 80                                           other #> 81    Shape B, supported with plausible reasoning. #> 82                             missing not reached #> 83                               missing by design #> 84                        missing invalid response #> 85                            missing by intention #> 86                                           other #> 87                22.9 metres (units not required) #> 88                             missing not reached #> 89                               missing by design #> 90                        missing invalid response #> 91                            missing by intention #> 92                        Response option 1 marked #> 93                        Response option 2 marked #> 94                        Response option 3 marked #> 95                        Response option 4 marked #> 96                             missing not reached #> 97                               missing by design #> 98                        missing invalid response #> 99                            missing by intention #> 100                       Response option 1 marked #> 101                       Response option 2 marked #> 102                       Response option 3 marked #> 103                       Response option 4 marked #> 104                            missing not reached #> 105                              missing by design #> 106                       missing invalid response #> 107                           missing by intention #> 108                       Response option 1 marked #> 109                       Response option 2 marked #> 110                       Response option 3 marked #> 111                       Response option 4 marked #> 112                       Response option 5 marked #> 113                       Response option 6 marked #> 114                       Response option 7 marked #> 115                       missing invalid response #> 116                           missing by intention #> 117                       Response option 1 marked #> 118                       Response option 2 marked #> 119                       Response option 3 marked #> 120                       Response option 4 marked #> 121                            missing not reached #> 122                              missing by design #> 123                       missing invalid response #> 124                           missing by intention #> 125                       Response option 1 marked #> 126                       Response option 2 marked #> 127                       Response option 3 marked #> 128                       Response option 4 marked #> 129                            missing not reached #> 130                              missing by design #> 131                       missing invalid response #> 132                           missing by intention #> 133                       Response option 1 marked #> 134                       Response option 2 marked #> 135                       Response option 3 marked #> 136                       Response option 4 marked #> 137                            missing not reached #> 138                              missing by design #> 139                       missing invalid response #> 140                           missing by intention #> 141                       Response option 1 marked #> 142                       Response option 2 marked #> 143                       Response option 3 marked #> 144                       Response option 4 marked #> 145                            missing not reached #> 146                              missing by design #> 147                       missing invalid response #> 148                           missing by intention #> 149                       Response option 1 marked #> 150                       Response option 2 marked #> 151                       Response option 3 marked #> 152                       Response option 4 marked #> 153                            missing not reached #> 154                              missing by design #> 155                       missing invalid response #> 156                           missing by intention #> 157                       Response option 1 marked #> 158                       Response option 2 marked #> 159                       Response option 3 marked #> 160                       Response option 4 marked #> 161                            missing not reached #> 162                              missing by design #> 163                       missing invalid response #> 164                           missing by intention #> 165                       Response option 1 marked #> 166                       Response option 2 marked #> 167                       Response option 3 marked #> 168                       Response option 4 marked #> 169                            missing not reached #> 170                              missing by design #> 171                       missing invalid response #> 172                           missing by intention #> 173                       Response option 1 marked #> 174                       Response option 2 marked #> 175                       Response option 3 marked #> 176                       Response option 4 marked #> 177                            missing not reached #> 178                              missing by design #> 179                       missing invalid response #> 180                           missing by intention #> 181                       Response option 1 marked #> 182                       Response option 2 marked #> 183                       Response option 3 marked #> 184                       Response option 4 marked #> 185                            missing not reached #> 186                              missing by design #> 187                       missing invalid response #> 188                           missing by intention #> 189                       Response option 1 marked #> 190                       Response option 2 marked #> 191                       Response option 3 marked #> 192                       Response option 4 marked #> 193                            missing not reached #> 194                              missing by design #> 195                       missing invalid response #> 196                           missing by intention #> 197                                          other #> 198                101 metres (units not required) #> 199                            missing not reached #> 200                              missing by design #> 201                       missing invalid response #> 202                           missing by intention #> 203                                          other #> 204              5.84 seconds (units not required) #> 205                            missing not reached #> 206                              missing by design #> 207                       missing invalid response #> 208                           missing by intention #> 209                                          other #> 210               78.1 meters (units not required) #> 211                            missing not reached #> 212                              missing by design #> 213                       missing invalid response #> 214                           missing by intention #> 215                                          other #> 216                    90 kph (units not required) #> 217                            missing not reached #> 218                              missing by design #> 219                       missing invalid response #> 220                           missing by intention #>                                                                                                                                            valueDescription #> 1                                                                                                                                  Response option 1 marked #> 2                                                                                                                                  Response option 2 marked #> 3                                                                                                                                  Response option 3 marked #> 4                                                                                                                                       missing not reached #> 5                                                                                                                                         missing by design #> 6                                                                                                                                  missing invalid response #> 7                                                                                                                                      missing by intention #> 8                                                                                                                                  Response option 1 marked #> 9                                                                                                                                  Response option 2 marked #> 10                                                                                                                                 Response option 3 marked #> 11                                                                                                                                 Response option 4 marked #> 12                                                                                                                                      missing not reached #> 13                                                                                                                                        missing by design #> 14                                                                                                                                 missing invalid response #> 15                                                                                                                                     missing by intention #> 16                                                                                                                                 Response option 1 marked #> 17                                                                                                                                 Response option 2 marked #> 18                                                                                                                                 Response option 3 marked #> 19                                                                                                                                      missing not reached #> 20                                                                                                                                        missing by design #> 21                                                                                                                                 missing invalid response #> 22                                                                                                                                     missing by intention #> 23                                                                                                                                 Response option 1 marked #> 24                                                                                                                                 Response option 2 marked #> 25                                                                                                                                 Response option 3 marked #> 26                                                                                                                                      missing not reached #> 27                                                                                                                                        missing by design #> 28                                                                                                                                 missing invalid response #> 29                                                                                                                                     missing by intention #> 30                                                                                                                                                    other #> 31                                                                                                                               14 mm (units not required) #> 32                                                                                                                                      missing not reached #> 33                                                                                                                                        missing by design #> 34                                                                                                                                 missing invalid response #> 35                                                                                                                                     missing by intention #> 36                                                                                                                                                    other #> 37                                                                                                                                                       39 #> 38                                                                                                                                      missing not reached #> 39                                                                                                                                        missing by design #> 40                                                                                                                                 missing invalid response #> 41                                                                                                                                     missing by intention #> 42                                                                                                                                 Response option 1 marked #> 43                                                                                                                                 Response option 2 marked #> 44                                                                                                                                 Response option 3 marked #> 45                                                                                                                                 Response option 4 marked #> 46                                                                                                                                      missing not reached #> 47                                                                                                                                        missing by design #> 48                                                                                                                                 missing invalid response #> 49                                                                                                                                     missing by intention #> 50                                                                                                                                                    other #> 51  Gives general reasoning that the surface area of pizza increases more rapidly than the price of pizza to conclude that the larger pizza is better value #> 52                                                                                                                                      missing not reached #> 53                                                                                                                                        missing by design #> 54                                                                                                                                 missing invalid response #> 55                                                                                                                                     missing by intention #> 56                                                                                                                                 Response option 1 marked #> 57                                                                                                                                 Response option 2 marked #> 58                                                                                                                                 Response option 3 marked #> 59                                                                                                                                 Response option 4 marked #> 60                                                                                                                                      missing not reached #> 61                                                                                                                                        missing by design #> 62                                                                                                                                 missing invalid response #> 63                                                                                                                                     missing by intention #> 64                                                                                                                                 Response option 1 marked #> 65                                                                                                                                 Response option 2 marked #> 66                                                                                                                                 Response option 3 marked #> 67                                                                                                                                 Response option 4 marked #> 68                                                                                                                                      missing not reached #> 69                                                                                                                                        missing by design #> 70                                                                                                                                 missing invalid response #> 71                                                                                                                                     missing by intention #> 72                                                                                                                                 Response option 1 marked #> 73                                                                                                                                 Response option 2 marked #> 74                                                                                                                                 Response option 3 marked #> 75                                                                                                                                 Response option 4 marked #> 76                                                                                                                                      missing not reached #> 77                                                                                                                                        missing by design #> 78                                                                                                                                 missing invalid response #> 79                                                                                                                                     missing by intention #> 80                                                                                                                                                    other #> 81                                                                                                             Shape B, supported with plausible reasoning. #> 82                                                                                                                                      missing not reached #> 83                                                                                                                                        missing by design #> 84                                                                                                                                 missing invalid response #> 85                                                                                                                                     missing by intention #> 86                                                                                                                                                    other #> 87                                                                                                                         22.9 metres (units not required) #> 88                                                                                                                                      missing not reached #> 89                                                                                                                                        missing by design #> 90                                                                                                                                 missing invalid response #> 91                                                                                                                                     missing by intention #> 92                                                                                                                                 Response option 1 marked #> 93                                                                                                                                 Response option 2 marked #> 94                                                                                                                                 Response option 3 marked #> 95                                                                                                                                 Response option 4 marked #> 96                                                                                                                                      missing not reached #> 97                                                                                                                                        missing by design #> 98                                                                                                                                 missing invalid response #> 99                                                                                                                                     missing by intention #> 100                                                                                                                                Response option 1 marked #> 101                                                                                                                                Response option 2 marked #> 102                                                                                                                                Response option 3 marked #> 103                                                                                                                                Response option 4 marked #> 104                                                                                                                                     missing not reached #> 105                                                                                                                                       missing by design #> 106                                                                                                                                missing invalid response #> 107                                                                                                                                    missing by intention #> 108                                                                                                                                Response option 1 marked #> 109                                                                                                                                Response option 2 marked #> 110                                                                                                                                Response option 3 marked #> 111                                                                                                                                Response option 4 marked #> 112                                                                                                                                Response option 5 marked #> 113                                                                                                                                Response option 6 marked #> 114                                                                                                                                Response option 7 marked #> 115                                                                                                                                missing invalid response #> 116                                                                                                                                    missing by intention #> 117                                                                                                                                Response option 1 marked #> 118                                                                                                                                Response option 2 marked #> 119                                                                                                                                Response option 3 marked #> 120                                                                                                                                Response option 4 marked #> 121                                                                                                                                     missing not reached #> 122                                                                                                                                       missing by design #> 123                                                                                                                                missing invalid response #> 124                                                                                                                                    missing by intention #> 125                                                                                                                                Response option 1 marked #> 126                                                                                                                                Response option 2 marked #> 127                                                                                                                                Response option 3 marked #> 128                                                                                                                                Response option 4 marked #> 129                                                                                                                                     missing not reached #> 130                                                                                                                                       missing by design #> 131                                                                                                                                missing invalid response #> 132                                                                                                                                    missing by intention #> 133                                                                                                                                Response option 1 marked #> 134                                                                                                                                Response option 2 marked #> 135                                                                                                                                Response option 3 marked #> 136                                                                                                                                Response option 4 marked #> 137                                                                                                                                     missing not reached #> 138                                                                                                                                       missing by design #> 139                                                                                                                                missing invalid response #> 140                                                                                                                                    missing by intention #> 141                                                                                                                                Response option 1 marked #> 142                                                                                                                                Response option 2 marked #> 143                                                                                                                                Response option 3 marked #> 144                                                                                                                                Response option 4 marked #> 145                                                                                                                                     missing not reached #> 146                                                                                                                                       missing by design #> 147                                                                                                                                missing invalid response #> 148                                                                                                                                    missing by intention #> 149                                                                                                                                Response option 1 marked #> 150                                                                                                                                Response option 2 marked #> 151                                                                                                                                Response option 3 marked #> 152                                                                                                                                Response option 4 marked #> 153                                                                                                                                     missing not reached #> 154                                                                                                                                       missing by design #> 155                                                                                                                                missing invalid response #> 156                                                                                                                                    missing by intention #> 157                                                                                                                                Response option 1 marked #> 158                                                                                                                                Response option 2 marked #> 159                                                                                                                                Response option 3 marked #> 160                                                                                                                                Response option 4 marked #> 161                                                                                                                                     missing not reached #> 162                                                                                                                                       missing by design #> 163                                                                                                                                missing invalid response #> 164                                                                                                                                    missing by intention #> 165                                                                                                                                Response option 1 marked #> 166                                                                                                                                Response option 2 marked #> 167                                                                                                                                Response option 3 marked #> 168                                                                                                                                Response option 4 marked #> 169                                                                                                                                     missing not reached #> 170                                                                                                                                       missing by design #> 171                                                                                                                                missing invalid response #> 172                                                                                                                                    missing by intention #> 173                                                                                                                                Response option 1 marked #> 174                                                                                                                                Response option 2 marked #> 175                                                                                                                                Response option 3 marked #> 176                                                                                                                                Response option 4 marked #> 177                                                                                                                                     missing not reached #> 178                                                                                                                                       missing by design #> 179                                                                                                                                missing invalid response #> 180                                                                                                                                    missing by intention #> 181                                                                                                                                Response option 1 marked #> 182                                                                                                                                Response option 2 marked #> 183                                                                                                                                Response option 3 marked #> 184                                                                                                                                Response option 4 marked #> 185                                                                                                                                     missing not reached #> 186                                                                                                                                       missing by design #> 187                                                                                                                                missing invalid response #> 188                                                                                                                                    missing by intention #> 189                                                                                                                                Response option 1 marked #> 190                                                                                                                                Response option 2 marked #> 191                                                                                                                                Response option 3 marked #> 192                                                                                                                                Response option 4 marked #> 193                                                                                                                                     missing not reached #> 194                                                                                                                                       missing by design #> 195                                                                                                                                missing invalid response #> 196                                                                                                                                    missing by intention #> 197                                                                                                                                                   other #> 198                                                                                                                         101 metres (units not required) #> 199                                                                                                                                     missing not reached #> 200                                                                                                                                       missing by design #> 201                                                                                                                                missing invalid response #> 202                                                                                                                                    missing by intention #> 203                                                                                                                                                   other #> 204                                                                                                                       5.84 seconds (units not required) #> 205                                                                                                                                     missing not reached #> 206                                                                                                                                       missing by design #> 207                                                                                                                                missing invalid response #> 208                                                                                                                                    missing by intention #> 209                                                                                                                                                   other #> 210                                                                                                                        78.1 meters (units not required) #> 211                                                                                                                                     missing not reached #> 212                                                                                                                                       missing by design #> 213                                                                                                                                missing invalid response #> 214                                                                                                                                    missing by intention #> 215                                                                                                                                                   other #> 216                                                                                                                             90 kph (units not required) #> 217                                                                                                                                     missing not reached #> 218                                                                                                                                       missing by design #> 219                                                                                                                                missing invalid response #> 220                                                                                                                                    missing by intention #>     valueLabelRecoded valueDescriptionRecoded #> 1                   0                    <NA> #> 2                   0                    <NA> #> 3                   1                    <NA> #> 4                 mnr                    <NA> #> 5                 mbd                    <NA> #> 6                 mir                    <NA> #> 7                 mbi                    <NA> #> 8                   1                    <NA> #> 9                   0                    <NA> #> 10                  0                    <NA> #> 11                  0                    <NA> #> 12                mnr                    <NA> #> 13                mbd                    <NA> #> 14                mir                    <NA> #> 15                mbi                    <NA> #> 16                  0                    <NA> #> 17                  1                    <NA> #> 18                  0                    <NA> #> 19                mnr                    <NA> #> 20                mbd                    <NA> #> 21                mir                    <NA> #> 22                mbi                    <NA> #> 23                  0                    <NA> #> 24                  1                    <NA> #> 25                  0                    <NA> #> 26                mnr                    <NA> #> 27                mbd                    <NA> #> 28                mir                    <NA> #> 29                mbi                    <NA> #> 30                  0                    <NA> #> 31                  1                    <NA> #> 32                mnr                    <NA> #> 33                mbd                    <NA> #> 34                mir                    <NA> #> 35                mbi                    <NA> #> 36                  0                    <NA> #> 37                  1                    <NA> #> 38                mnr                    <NA> #> 39                mbd                    <NA> #> 40                mir                    <NA> #> 41                mbi                    <NA> #> 42                  1                    <NA> #> 43                  0                    <NA> #> 44                  0                    <NA> #> 45                  0                    <NA> #> 46                mnr                    <NA> #> 47                mbd                    <NA> #> 48                mir                    <NA> #> 49                mbi                    <NA> #> 50                  0                    <NA> #> 51                  1                    <NA> #> 52                mnr                    <NA> #> 53                mbd                    <NA> #> 54                mir                    <NA> #> 55                mbi                    <NA> #> 56                  0                    <NA> #> 57                  0                    <NA> #> 58                  0                    <NA> #> 59                  1                    <NA> #> 60                mnr                    <NA> #> 61                mbd                    <NA> #> 62                mir                    <NA> #> 63                mbi                    <NA> #> 64                  0                    <NA> #> 65                  1                    <NA> #> 66                  0                    <NA> #> 67                  0                    <NA> #> 68                mnr                    <NA> #> 69                mbd                    <NA> #> 70                mir                    <NA> #> 71                mbi                    <NA> #> 72                  0                    <NA> #> 73                  0                    <NA> #> 74                  1                    <NA> #> 75                  0                    <NA> #> 76                mnr                    <NA> #> 77                mbd                    <NA> #> 78                mir                    <NA> #> 79                mbi                    <NA> #> 80                  0                    <NA> #> 81                  1                    <NA> #> 82                mnr                    <NA> #> 83                mbd                    <NA> #> 84                mir                    <NA> #> 85                mbi                    <NA> #> 86                  0                    <NA> #> 87                  1                    <NA> #> 88                mnr                    <NA> #> 89                mbd                    <NA> #> 90                mir                    <NA> #> 91                mbi                    <NA> #> 92                  0                    <NA> #> 93                  0                    <NA> #> 94                  0                    <NA> #> 95                  1                    <NA> #> 96                mnr                    <NA> #> 97                mbd                    <NA> #> 98                mir                    <NA> #> 99                mbi                    <NA> #> 100                 0                    <NA> #> 101                 1                    <NA> #> 102                 0                    <NA> #> 103                 0                    <NA> #> 104               mnr                    <NA> #> 105               mbd                    <NA> #> 106               mir                    <NA> #> 107               mbi                    <NA> #> 108                 0                    <NA> #> 109                 0                    <NA> #> 110                 0                    <NA> #> 111                 0                    <NA> #> 112                 0                    <NA> #> 113                 1                    <NA> #> 114                 0                    <NA> #> 115               mir                    <NA> #> 116               mbi                    <NA> #> 117                 1                    <NA> #> 118                 0                    <NA> #> 119                 0                    <NA> #> 120                 0                    <NA> #> 121               mnr                    <NA> #> 122               mbd                    <NA> #> 123               mir                    <NA> #> 124               mbi                    <NA> #> 125                 0                    <NA> #> 126                 0                    <NA> #> 127                 0                    <NA> #> 128                 1                    <NA> #> 129               mnr                    <NA> #> 130               mbd                    <NA> #> 131               mir                    <NA> #> 132               mbi                    <NA> #> 133                 0                    <NA> #> 134                 1                    <NA> #> 135                 0                    <NA> #> 136                 0                    <NA> #> 137               mnr                    <NA> #> 138               mbd                    <NA> #> 139               mir                    <NA> #> 140               mbi                    <NA> #> 141                 1                    <NA> #> 142                 0                    <NA> #> 143                 0                    <NA> #> 144                 0                    <NA> #> 145               mnr                    <NA> #> 146               mbd                    <NA> #> 147               mir                    <NA> #> 148               mbi                    <NA> #> 149                 0                    <NA> #> 150                 0                    <NA> #> 151                 0                    <NA> #> 152                 1                    <NA> #> 153               mnr                    <NA> #> 154               mbd                    <NA> #> 155               mir                    <NA> #> 156               mbi                    <NA> #> 157                 0                    <NA> #> 158                 1                    <NA> #> 159                 0                    <NA> #> 160                 0                    <NA> #> 161               mnr                    <NA> #> 162               mbd                    <NA> #> 163               mir                    <NA> #> 164               mbi                    <NA> #> 165                 0                    <NA> #> 166                 0                    <NA> #> 167                 1                    <NA> #> 168                 0                    <NA> #> 169               mnr                    <NA> #> 170               mbd                    <NA> #> 171               mir                    <NA> #> 172               mbi                    <NA> #> 173                 1                    <NA> #> 174                 0                    <NA> #> 175                 0                    <NA> #> 176                 0                    <NA> #> 177               mnr                    <NA> #> 178               mbd                    <NA> #> 179               mir                    <NA> #> 180               mbi                    <NA> #> 181                 1                    <NA> #> 182                 0                    <NA> #> 183                 0                    <NA> #> 184                 0                    <NA> #> 185               mnr                    <NA> #> 186               mbd                    <NA> #> 187               mir                    <NA> #> 188               mbi                    <NA> #> 189                 0                    <NA> #> 190                 1                    <NA> #> 191                 0                    <NA> #> 192                 0                    <NA> #> 193               mnr                    <NA> #> 194               mbd                    <NA> #> 195               mir                    <NA> #> 196               mbi                    <NA> #> 197                 0                    <NA> #> 198                 1                    <NA> #> 199               mnr                    <NA> #> 200               mbd                    <NA> #> 201               mir                    <NA> #> 202               mbi                    <NA> #> 203                 0                    <NA> #> 204                 1                    <NA> #> 205               mnr                    <NA> #> 206               mbd                    <NA> #> 207               mir                    <NA> #> 208               mbi                    <NA> #> 209                 0                    <NA> #> 210                 1                    <NA> #> 211               mnr                    <NA> #> 212               mbd                    <NA> #> 213               mir                    <NA> #> 214               mbi                    <NA> #> 215                 0                    <NA> #> 216                 1                    <NA> #> 217               mnr                    <NA> #> 218               mbd                    <NA> #> 219               mir                    <NA> #> 220               mbi                    <NA> #>  #> $unitRecodings #>   unit value valueRecode valueType valueLabel valueDescription #> 1  I12     0           0        vc       <NA>             <NA> #> 2  I12     1           0        vc       <NA>             <NA> #> 3  I12     2           0        vc       <NA>             <NA> #> 4  I12     3           1        vc       <NA>             <NA> #> 5  I12   mbd         mbd       mbd       <NA>             <NA> #> 6  I12   mir         mir       mir       <NA>             <NA> #> 7  I12   mbi         mbi       mbi       <NA>             <NA> #>   valueLabelRecoded #> 1              <NA> #> 2              <NA> #> 3              <NA> #> 4              <NA> #> 5              <NA> #> 6              <NA> #> 7              <NA> #>  #> $savFiles #>       filename case.id fullname #> 1 booklet1.sav      ID     <NA> #> 2 booklet2.sav      ID     <NA> #> 3 booklet3.sav      ID     <NA> #>  #> $newID #>         key value #> 1 master-id    ID #>  #> $aggrMiss #>   nam  vc mvi mnr mci mbd mir mbi #> 1  vc  vc mvi  vc mci err  vc  vc #> 2 mvi mvi mvi err mci err err err #> 3 mnr  vc err mnr mci err mir mnr #> 4 mci mci mci mci mci err mci mci #> 5 mbd err err err err mbd err err #> 6 mir  vc err mir mci err mir mir #> 7 mbi  vc err mnr mci err mir mbi #>  #> $booklets #>    booklet block1 block2 block3 #> 1 booklet1    bl1    bl2    bl3 #> 2 booklet2    bl4    bl3    bl2 #> 3 booklet3    bl3    bl1    bl4 #>  #> $blocks #>    subunit block subunitBlockPosition #> 1      I01   bl1                    1 #> 2      I02   bl1                    2 #> 3      I03   bl1                    3 #> 4      I04   bl1                    4 #> 5      I05   bl1                    5 #> 6      I06   bl1                    6 #> 7      I07   bl1                    7 #> 8      I08   bl2                    1 #> 9      I09   bl2                    2 #> 10     I10   bl2                    3 #> 11     I11   bl2                    4 #> 12    I12a   bl2                    5 #> 13    I12b   bl2                    6 #> 14    I12c   bl2                    7 #> 15     I13   bl2                    8 #> 16     I14   bl2                    9 #> 17     I15   bl3                    1 #> 18     I16   bl3                    2 #> 19     I17   bl3                    3 #> 20     I18   bl3                    4 #> 21     I19   bl3                    5 #> 22     I20   bl3                    6 #> 23     I21   bl3                    7 #> 24     I22   bl4                    1 #> 25     I23   bl4                    2 #> 26     I24   bl4                    3 #> 27     I25   bl4                    4 #> 28     I26   bl4                    5 #> 29     I27   bl4                    6 #> 30     I28   bl4                    7 #>"},{"path":"https://sachseka.github.io/eatPrep/reference/readMerkmalXlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Read xlsx-Files Produced by IQB Item-DB named ","title":"Read xlsx-Files Produced by IQB Item-DB named ","text":"function primarily intended internal use Institute Educational Quality Improvement (IQB). xlsx-files function produced software IQB Item-DB using information stored IQB-Databases.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readMerkmalXlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read xlsx-Files Produced by IQB Item-DB named ","text":"","code":"readMerkmalXlsx(filename, tolcl = FALSE, alleM = TRUE)"},{"path":"https://sachseka.github.io/eatPrep/reference/readMerkmalXlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read xlsx-Files Produced by IQB Item-DB named ","text":"filename character string containing path, name extension .xlsx produced IQB Item-DB via 'Merkmalsauszug'. tolcl Logical. Indicating whether Item-ID created converting numbers lowercase letters (required English project). Default FALSE. alleM Logical. Indicating whether merged data frame containing Itemmerkmale Aufgabenmerkmale together created. Default TRUE.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readMerkmalXlsx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read xlsx-Files Produced by IQB Item-DB named ","text":"xlsx-file produced 'IQB Item-DB' expected following sheets: “Itemmerkmale”, “Aufgabenmerkmale”. Order matter. readMerkmalXlsx produce warning sheets missing wrongly specified.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readMerkmalXlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read xlsx-Files Produced by IQB Item-DB named ","text":"list data frames containing Itemmerkmale, Aufgabenmerkmale AlleMerkmale (optional).","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readMerkmalXlsx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read xlsx-Files Produced by IQB Item-DB named ","text":"Karoline Sachse","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readMerkmalXlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read xlsx-Files Produced by IQB Item-DB named ","text":"","code":"readMerkmalXlsx(system.file(\"extdata\", \"itemmerkmale.xlsx\", package = \"eatPrep\")) #> Reading sheet 'Aufgabenmerkmale'. #> Reading sheet 'Itemmerkmale'. #> Data frame 'AlleMerkmale' has been created. #> $Aufgabenmerkmale #>                      Aufgabe Zeit.A                     AufgID AufgTitel #> 1  Animals: Weight of a duck   0:00  Animals: Weight of a duck        NA #> 2 Animals: Weight of a horse   0:00 Animals: Weight of a horse        NA #>  #> $Itemmerkmale #>                      Aufgabe Teilaufgabe Item Zeit.I Anforderungsbereich.MaP #> 1  Animals: Weight of a duck           A   01   0:00                       I #> 2 Animals: Weight of a horse           A   01   0:00                       I #> 3 Animals: Weight of a horse           B   02   0:00                      II #>   Bildungsstandards.MaP.allgemeine                Itemtyp.5er #> 1                               1a GA - Geschlossen Ankreuzen #> 2                             <NA> GA - Geschlossen Ankreuzen #> 3                             <NA> GA - Geschlossen Ankreuzen #>                       AufgID AufgTitel                       ItemID #> 1  Animals: Weight of a duck        NA  Animals: Weight of a duck01 #> 2 Animals: Weight of a horse        NA Animals: Weight of a horse01 #> 3 Animals: Weight of a horse        NA Animals: Weight of a horse02 #>  #> $AlleMerkmale #>                       AufgID                    Aufgabe Teilaufgabe Item #> 1  Animals: Weight of a duck  Animals: Weight of a duck           A   01 #> 2 Animals: Weight of a horse Animals: Weight of a horse           A   01 #> 3 Animals: Weight of a horse Animals: Weight of a horse           B   02 #>                         ItemID Zeit.I Anforderungsbereich.MaP #> 1  Animals: Weight of a duck01   0:00                       I #> 2 Animals: Weight of a horse01   0:00                       I #> 3 Animals: Weight of a horse02   0:00                      II #>   Bildungsstandards.MaP.allgemeine                Itemtyp.5er Zeit.A #> 1                               1a GA - Geschlossen Ankreuzen   0:00 #> 2                             <NA> GA - Geschlossen Ankreuzen   0:00 #> 3                             <NA> GA - Geschlossen Ankreuzen   0:00 #>"},{"path":"https://sachseka.github.io/eatPrep/reference/readSpss.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SPSS Data Files and Truncate Space in String Variables and Change Column Width — readSpss","title":"Read SPSS Data Files and Truncate Space in String Variables and Change Column Width — readSpss","text":"function reads SPSS data files using function read.spss foreign package converts variables class character. Additionally, leading trailing white spaces can removed character variables, numeric values can padded leading zeros uniform width entries column.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readSpss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SPSS Data Files and Truncate Space in String Variables and Change Column Width — readSpss","text":"","code":"readSpss(file, addLeadingZeros = FALSE, truncateSpaceChar = TRUE)"},{"path":"https://sachseka.github.io/eatPrep/reference/readSpss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SPSS Data Files and Truncate Space in String Variables and Change Column Width — readSpss","text":"file Name SPSS data file read addLeadingZeros Logical: whether values transformed uniform width column, see ‘Details’. truncateSpaceChar Logical: whether leading trailing spaces removed character variables.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readSpss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read SPSS Data Files and Truncate Space in String Variables and Change Column Width — readSpss","text":"addLeadingZeros=TRUE, values column transformed uniform width adding leading zeros. width column determined longest value column, e.g., column contains values 1, 10, 100 transformed column 001, 010, 100. can useful  values leading zeros removed reading SPSS file.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/readSpss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SPSS Data Files and Truncate Space in String Variables and Change Column Width — readSpss","text":"data frame. columns class character.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/recodeData.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Datasets with Several Kinds of Missing Values — recodeData","title":"Recode Datasets with Several Kinds of Missing Values — recodeData","text":"Recode datasets special consideration missing values. See collapseMissings supported types missing values.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/recodeData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Datasets with Several Kinds of Missing Values — recodeData","text":"","code":"recodeData(dat, values, subunits = NULL, verbose = FALSE)"},{"path":"https://sachseka.github.io/eatPrep/reference/recodeData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Datasets with Several Kinds of Missing Values — recodeData","text":"dat data frame values data frame code information. See ‘Details’. subunits data frame subunit information. See ‘Details’. verbose Logical. TRUE additional information printed.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/recodeData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recode Datasets with Several Kinds of Missing Values — recodeData","text":"recodeData recodes data frames special consideration missing values. recodeData give warnings, missing incomplete recode informations found. Values without recode information recoded. Examples data frames values subunits can found via data(inputList).","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/recodeData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Datasets with Several Kinds of Missing Values — recodeData","text":"data frame recoded variables according specifications values subunits. columns named according specifications subunits$subunitRecoded subunits provided, item names changed recoded items.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/recodeData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recode Datasets with Several Kinds of Missing Values — recodeData","text":"Nicole Mahler, Karoline Sachse, Martin Hecht, Christiane Penk","code":""},{"path":[]},{"path":"https://sachseka.github.io/eatPrep/reference/recodeData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Datasets with Several Kinds of Missing Values — recodeData","text":"","code":"data(inputDat) data(inputList)  dat1 <- inputDat[[1]]  # get first dataset from inputDat datRec <- recodeData(dat1, inputList$values, inputList$subunits, verbose = TRUE) #>  #> Found no recode information for variable(s):  #> ID, hisei.  #> This/These variable(s) will not be recoded. #>  #> Variables... I01, I02, I03, I04, I05, I06, I07, I08, I09, I10, I11, I12a, I12b, I12c, I13, I14, I15, I16, I17, I18, I19, I20, I21 #> ...have been recoded. str(datRec) #> 'data.frame':\t100 obs. of  25 variables: #>  $ ID   : chr  \"person100\" \"person101\" \"person102\" \"person103\" ... #>  $ hisei: chr  \"49\" NA \"57\" \"32\" ... #>  $ I01R : chr  \"0\" \"mbi\" \"1\" \"0\" ... #>  $ I02R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I03R : chr  \"0\" \"1\" \"1\" \"0\" ... #>  $ I04R : chr  \"1\" \"1\" \"0\" \"0\" ... #>  $ I05R : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I06R : chr  \"0\" \"mbi\" \"0\" \"1\" ... #>  $ I07R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I08R : chr  \"0\" \"1\" \"0\" \"0\" ... #>  $ I09R : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I10R : chr  \"1\" \"0\" \"0\" \"0\" ... #>  $ I11R : chr  \"0\" \"0\" \"1\" \"0\" ... #>  $ I12aR: chr  \"1\" \"0\" \"1\" \"0\" ... #>  $ I12bR: chr  \"0\" \"mbi\" \"0\" \"1\" ... #>  $ I12cR: chr  \"1\" \"0\" \"0\" \"1\" ... #>  $ I13R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I14R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I15R : chr  \"mbi\" \"0\" \"mbi\" \"1\" ... #>  $ I16R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I17R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I18R : chr  \"mbi\" \"1\" \"mbi\" \"1\" ... #>  $ I19R : chr  \"mbi\" \"1\" \"mbi\" \"0\" ... #>  $ I20R : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I21R : chr  \"mbi\" \"0\" \"mbi\" \"1\" ..."},{"path":"https://sachseka.github.io/eatPrep/reference/scoreData.html","id":null,"dir":"Reference","previous_headings":"","what":"Score Datasets with Several Kinds of Missing Values — scoreData","title":"Score Datasets with Several Kinds of Missing Values — scoreData","text":"Score datasets special consideration missing values.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/scoreData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score Datasets with Several Kinds of Missing Values — scoreData","text":"","code":"scoreData(dat, unitrecodings, subunits, verbose = FALSE, ...)"},{"path":"https://sachseka.github.io/eatPrep/reference/scoreData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score Datasets with Several Kinds of Missing Values — scoreData","text":"dat data frame unitrecodings data frame information scoring units. See ‘Details’. subunits data frame subunit information. See ‘Details’. verbose logical. TRUE additional information printed. ... Additional arguments.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/scoreData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score Datasets with Several Kinds of Missing Values — scoreData","text":"function similar recodeData, defaults better suited scoring. scoreData give warnings incomplete scoring informations found. Values without scoring information scored. Examples data frames unitrecodings units can found via data(inputList).","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/scoreData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score Datasets with Several Kinds of Missing Values — scoreData","text":"data frame scored variables according specifications unitrecodings units.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/scoreData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Score Datasets with Several Kinds of Missing Values — scoreData","text":"Nicole Mahler","code":""},{"path":[]},{"path":"https://sachseka.github.io/eatPrep/reference/scoreData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score Datasets with Several Kinds of Missing Values — scoreData","text":"","code":"data(inputDat) data(inputList)  prepDat <- automateDataPreparation (inputList = inputList, datList = inputDat,     readSpss = FALSE, checkData=FALSE, mergeData = TRUE, recodeData=TRUE,     aggregateData=TRUE, scoreData= FALSE, writeSpss=FALSE, verbose = TRUE) #> Starting automateDataPreparation 2025-02-19 15:54:23.243306 #>  #> Check has been skipped. #>  #> Start merging. #> Start merging of dataset 1. #> Start merging of dataset 2. #> Start merging of dataset 3. #> Start adding mbd according to data pattern. #>  #> Start recoding. #>  #> Found no recode information for variable(s):  #> ID, hisei.  #> This/These variable(s) will not be recoded. #>  #> Variables... I01, I02, I03, I04, I05, I06, I07, I08, I09, I10, I11, I12a, I12b, I12c, I13, I14, I15, I16, I17, I18, I19, I20, I21, I22, I23, I24, I25, I26, I27, I28 #> ...have been recoded. #>  #> RecodeMnr has been skipped. #>  #> Start aggregating #> Since inputList$aggrMiss exists, this will be used instead of default. #> All aggregation rules will be defaulted to 'SUM', because no other type is currently supported. #> Found 27 unit(s) with only one subunit in 'dat'. This/these subunit(s) will not be aggregated and renamed to their respective unit name(s). #> 1 units were aggregated: I12. #>  #> Scoring has been skipped. #>  #> No SPSS-File has been written. #>  #> Missings are UNcollapsed. #> automateDataPreparation terminated successfully! 2025-02-19 15:54:23.367046  datSco <- scoreData(prepDat, inputList$unitRecodings, inputList$subunits,     verbose = TRUE) #> ✔ 1 unit was scored: `I12`. str(datSco) #> 'data.frame':\t300 obs. of  30 variables: #>  $ ID   : chr  \"person100\" \"person101\" \"person102\" \"person103\" ... #>  $ hisei: chr  \"49\" NA \"57\" \"32\" ... #>  $ I01  : chr  \"0\" \"mbi\" \"1\" \"0\" ... #>  $ I02  : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I03  : chr  \"0\" \"1\" \"1\" \"0\" ... #>  $ I04  : chr  \"1\" \"1\" \"0\" \"0\" ... #>  $ I05  : chr  \"0\" \"0\" \"0\" \"1\" ... #>  $ I06  : chr  \"0\" \"mbi\" \"0\" \"1\" ... #>  $ I07  : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I08  : chr  \"0\" \"1\" \"0\" \"0\" ... #>  $ I09  : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ I10  : chr  \"1\" \"0\" \"0\" \"0\" ... #>  $ I11  : chr  \"0\" \"0\" \"1\" \"0\" ... #>  $ I13  : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I14  : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I15  : chr  \"mbi\" \"0\" \"mbi\" \"1\" ... #>  $ I16  : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I17  : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I18  : chr  \"mbi\" \"1\" \"mbi\" \"1\" ... #>  $ I19  : chr  \"mbi\" \"1\" \"mbi\" \"0\" ... #>  $ I20  : chr  \"mbi\" \"0\" \"mbi\" \"0\" ... #>  $ I21  : chr  \"mbi\" \"0\" \"mbi\" \"1\" ... #>  $ I22  : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I23  : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I24  : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I25  : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I26  : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I27  : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I28  : chr  \"mbd\" \"mbd\" \"mbd\" \"mbd\" ... #>  $ I12  : chr  \"0\" \"0\" \"0\" \"0\" ..."},{"path":"https://sachseka.github.io/eatPrep/reference/visualSubsetRecode.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect data subsets visually and recode instantaneously — visualSubsetRecode","title":"Inspect data subsets visually and recode instantaneously — visualSubsetRecode","text":"function facilitates manual inspection recoding data subsets. example, class students large assessment flagged issue 'audio broken,' may want verify validity response patterns. responses seem invalid, can choose recode entire class value like 'missing coding impossible' (mci), typically treated NA IRT scaling later . function allows visually review flagged subsets sequentially make interactive decisions whether recode data.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/visualSubsetRecode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect data subsets visually and recode instantaneously — visualSubsetRecode","text":"","code":"visualSubsetRecode(dat, subsetInfo, ID = \"ID\", toRecodeVal=-91,                       useGroups = NULL, positions = FALSE, comments = FALSE)"},{"path":"https://sachseka.github.io/eatPrep/reference/visualSubsetRecode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect data subsets visually and recode instantaneously — visualSubsetRecode","text":"dat data frame containing individuals variables wide format. See prepDat examples example. subsetInfo data frame following columns (names important!): [ID]: ID-name specified via ID argument. ID name first data set identifies individual persons flagged. \"datCols\": Indicates variable(s) person identified ID flagged. [useGroups] (optional): group-name specified via useGroups argument. Identifies groups persons displayed together review process. See subsetInfoMax examples example. ID character vector length 1 indicating name case identifier variable dat. Default \"ID\". toRecodeVal Optional: scalar indicating recode string. useGroups Optional: character string indicating name group identifier column subsetInfo. Used group level subsetting. positions Logical: Whether subsetInfo contains columns \"blockPosition\" \"subunitBlockPosition\" (names important!). displayed visually inspecting data options menu added. comments Logical: Whether subsetInfo contains column \"comment\" (name important!). displayed visually inspecting data.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/visualSubsetRecode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect data subsets visually and recode instantaneously — visualSubsetRecode","text":"function returns list containing two data frames. first data frame modified input data, identical original except changes made review process. second data frame, stored subsetInfo, documents choices made recoding process.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/visualSubsetRecode.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Inspect data subsets visually and recode instantaneously — visualSubsetRecode","text":"Karoline Sachse","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/visualSubsetRecode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect data subsets visually and recode instantaneously — visualSubsetRecode","text":"","code":"data(inputList) data(inputDat)  prepDat <- automateDataPreparation (inputList = inputList, datList = inputDat,                                     readSpss = FALSE, checkData = FALSE, mergeData = TRUE,                                     recodeData = TRUE, aggregateData = TRUE,                                     scoreData = TRUE, writeSpss = FALSE, verbose = FALSE) #> 1 units were aggregated: I12.  subsetInfoMin <- data.frame(ID=c(\"person100\", \"person101\", \"person102\", \"person103\", \"person101\",                                  \"person100\", \"person101\", \"person102\", \"person103\", \"person101\",                                  \"person101\"),                             datCols=c(\"I01\", \"I02\", \"I03\", \"I01\", \"I02\", \"I03\",                                       \"I04\", NA, \"I02\", \"I03\", \"I04\"))  if (FALSE) datVisRec <- visualSubsetRecode(dat=prepDat, subsetInfo=subsetInfoMin, ID=\"ID\",                                 toRecodeVal=\"mci\", useGroups=NULL) # \\dontrun{}  subsetInfoMax <- data.frame(ID=c(\"person100\", \"person101\", \"person102\", \"person103\", \"person101\",                               \"person100\", \"person101\", \"person102\", \"person103\", \"person101\",                               \"person101\"),                          IDgroup=c(1,1,1,1,1,2,2,2,2,2,2),                          datCols=c(\"I01\", \"I02\", \"I03\", \"I01\", \"I02\", \"I03\",                                    \"I04\", NA, \"I02\", \"I03\", \"I04\"))  if (FALSE) datVisRec2 <- visualSubsetRecode(dat=prepDat, subsetInfo=subsetInfoMax, ID=\"ID\",                                  toRecodeVal=\"mci\", useGroups=\"IDgroup\") # \\dontrun{}"},{"path":"https://sachseka.github.io/eatPrep/reference/writeSpss.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Datasets to SPSS — writeSpss","title":"Export Datasets to SPSS — writeSpss","text":"Writes data SPSS syntax files.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/writeSpss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Datasets to SPSS — writeSpss","text":"","code":"writeSpss(dat, values, subunits, units,     filedat = \"mydata.txt\", filesps = \"readmydata.sps\",     missing.rule = list(mvi = 0, mnr = 0, mci = NA, mbd = NA, mir = 0, mbi = 0),     path = getwd(), sep = \"\\t\", dec = \",\", verbose = FALSE)"},{"path":"https://sachseka.github.io/eatPrep/reference/writeSpss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Datasets to SPSS — writeSpss","text":"dat data frame exported SPSS. values data frame code information. See inputList details. subunits data frame subunit information. See inputList details. units data frame unit information. See inputList details. filedat character string name output data file. filesps character string name output syntax file. missing.rule list containing recode information character missings. See collapseMissings description default values. path character string containing path output file.   value path appended filedat filesps.   default, files written current R working directory.   path=NULL file path appending done. sep separator data fields. dec decimal separator numerical data. verbose Logical. TRUE, file names additional information printed.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/writeSpss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export Datasets to SPSS — writeSpss","text":"function automates work needed export dataset SPSS. uses modified version writeForeignSPSS() foreign package  mids2spss() mice package. modified version allows choice field decimal separators, makes improvements formatting provides variable labels value labels according information data frames values, subunits units. Examples data frames values, subunits units can found data(inputList). SPSS syntax file proper file names separators set, principle run read data without alteration. SPSS strict R respect paths. Always use full path, otherwise SPSS may able find data file.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/writeSpss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Datasets to SPSS — writeSpss","text":"Used side effects. return value NULL.","code":""},{"path":"https://sachseka.github.io/eatPrep/reference/writeSpss.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Export Datasets to SPSS — writeSpss","text":"Nicole Haag","code":""},{"path":[]},{"path":[]},{"path":"https://sachseka.github.io/eatPrep/news/index.html","id":"bug-fixes-1-0-4","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"eatPrep 1.0.4","text":"agree2() instead irr:agree() used longer error thrown data formatted character","code":""},{"path":[]},{"path":"https://sachseka.github.io/eatPrep/news/index.html","id":"new-features-1-0-2","dir":"Changelog","previous_headings":"","what":"new features","title":"eatPrep 1.0.2","text":"visualSubsetRecode()added","code":""},{"path":[]},{"path":"https://sachseka.github.io/eatPrep/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"new features","title":"eatPrep 1.0.0","text":"mbocompatibility added","code":""},{"path":"https://sachseka.github.io/eatPrep/news/index.html","id":"internal-1-0-0","dir":"Changelog","previous_headings":"","what":"internal","title":"eatPrep 1.0.0","text":"package set stable","code":""}]
